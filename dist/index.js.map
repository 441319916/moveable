{"version":3,"file":"index.js","sources":["../../src/InnerMoveable.tsx","../../src/consts.ts","../../src/Moveable.tsx","../src/consts.ts","../src/Editor.ts","../src/index.ts"],"sourcesContent":["import { Component, h } from \"preact\";\nimport { createPortal } from \"preact/compat\";\nimport Moveable, { MoveableProps, PreactMoveableInterface } from \"preact-moveable\";\nimport { ref } from \"framework-utils\";\n\nexport default class InnerMoveable extends Component<MoveableProps> {\n    public state: MoveableProps = {};\n    public preactMoveable: PreactMoveableInterface;\n    constructor(props: MoveableProps) {\n        super(props);\n        this.state = this.props;\n    }\n    public render() {\n        return createPortal(<Moveable ref={ref(this, \"preactMoveable\")} {...this.state} />, this.props.parentElement);\n    }\n}\n","import { MoveableEvents, MoveableOptions } from \"./types\";\n\nexport const PROPERTIES: Array<keyof MoveableOptions> = [\n    \"draggable\", \"resizable\", \"scalable\", \"rotatable\",\n    \"warpable\", \"pinchable\", \"snappable\", \"origin\", \"target\", \"edge\",\n    \"throttleDrag\", \"throttleResize\",\n    \"throttleScale\", \"throttleRotate\", \"keepRatio\",\n    \"dragArea\",\n    \"pinchThreshold\",\n    \"snapCenter\", \"snapThreshold\",\n    \"horizontalGuidelines\", \"verticalGuidelines\", \"elementGuidelines\",\n    \"bounds\",\n\n    \"className\",\n    \"renderDirections\",\n    \"scrollable\",\n    \"getScrollPosition\",\n    \"scrollContainer\",\n    \"scrollThreshold\",\n];\nexport const EVENTS: Array<keyof MoveableEvents> = [\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"resizeStart\",\n    \"resize\",\n    \"resizeEnd\",\n    \"scaleStart\",\n    \"scale\",\n    \"scaleEnd\",\n    \"rotateStart\",\n    \"rotate\",\n    \"rotateEnd\",\n    \"warpStart\",\n    \"warp\",\n    \"warpEnd\",\n    \"pinchStart\",\n    \"pinch\",\n    \"pinchEnd\",\n    \"dragGroupStart\",\n    \"dragGroup\",\n    \"dragGroupEnd\",\n    \"resizeGroupStart\",\n    \"resizeGroup\",\n    \"resizeGroupEnd\",\n    \"scaleGroupStart\",\n    \"scaleGroup\",\n    \"scaleGroupEnd\",\n    \"rotateGroupStart\",\n    \"rotateGroup\",\n    \"rotateGroupEnd\",\n    \"pinchGroupStart\",\n    \"pinchGroup\",\n    \"pinchGroupEnd\",\n    \"clickGroup\",\n\n    \"scroll\",\n    \"scrollGroup\",\n\n    \"renderStart\",\n    \"render\",\n    \"renderEnd\",\n    \"renderGroupStart\",\n    \"renderGroup\",\n    \"renderGroupEnd\",\n];\n","import EgComponent from \"@egjs/component\";\nimport { ref, Properties } from \"framework-utils\";\nimport { h, render } from \"preact\";\nimport InnerMoveable from \"./InnerMoveable\";\nimport { MoveableOptions, MoveableGetterSetter } from \"./types\";\nimport {\n    OnDragStart, OnDrag, OnResize, OnResizeStart,\n    OnResizeEnd, OnScaleStart, OnScaleEnd, OnRotateStart,\n    OnRotateEnd, OnDragEnd, OnRotate, OnScale,\n    OnWarpStart, OnWarpEnd, OnWarp, OnPinchStart,\n    OnPinch, OnPinchEnd, OnDragGroup, OnDragGroupStart,\n    OnDragGroupEnd, OnResizeGroup, OnResizeGroupStart,\n    OnResizeGroupEnd, OnScaleGroup, OnScaleGroupEnd,\n    OnRotateGroup, OnRotateGroupStart, OnRotateGroupEnd,\n    OnPinchGroup, OnPinchGroupStart, OnPinchGroupEnd, OnScaleGroupStart, OnClickGroup,\n    MoveableInterface,\n    RectInfo,\n    OnClick,\n    OnScroll,\n    OnScrollGroup,\n    OnRenderStart,\n    OnRender,\n    OnRenderEnd,\n    OnRenderGroupStart,\n    OnRenderGroup,\n    OnRenderGroupEnd,\n} from \"react-moveable/declaration/types\";\nimport { PROPERTIES, EVENTS } from \"./consts\";\nimport { camelize, isArray } from \"@daybrush/utils\";\n\n/**\n * Moveable is Draggable! Resizable! Scalable! Rotatable!\n * @sort 1\n * @extends eg.Component\n */\n@Properties(PROPERTIES, (prototype, property) => {\n    Object.defineProperty(prototype, property, {\n        get() {\n            return this.getMoveable().props[property];\n        },\n        set(value) {\n            this.setState({\n                [property]: value,\n            });\n        },\n        enumerable: true,\n        configurable: true,\n    });\n})\nclass Moveable extends EgComponent implements MoveableInterface {\n    private innerMoveable!: InnerMoveable;\n    private tempElement = document.createElement(\"div\");\n\n    /**\n     *\n     */\n    constructor(parentElement: HTMLElement | SVGElement, options: MoveableOptions = {}) {\n        super();\n        const nextOptions = { container: parentElement, ...options };\n\n        const events: any = {};\n\n        EVENTS.forEach(name => {\n            events[camelize(`on ${name}`)] = (e: any) => this.trigger(name, e);\n        });\n\n        render(\n            <InnerMoveable\n                ref={ref(this, \"innerMoveable\")}\n                parentElement={parentElement}\n                {...nextOptions}\n                {...events}\n            />,\n            this.tempElement,\n        );\n        const target = nextOptions.target!;\n        if (isArray(target) && target.length > 1) {\n            this.updateRect();\n        }\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: HTMLElement | SVGElement) {\n        return this.getMoveable().isMoveableElement(target);\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect() {\n        this.getMoveable().updateRect();\n    }\n    /**\n     * You can move the Moveable through the external `MouseEvent`or `TouchEvent`.\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent): void {\n        this.getMoveable().dragStart(e);\n    }\n\n    /**\n     * Whether the coordinates are inside Moveable\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number): boolean {\n        return this.getMoveable().isInside(clientX, clientY);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        return this.getMoveable().getRect();\n    }\n    /**\n     * You can change options or properties dynamically.\n     * @param - options or properties\n     * @param - After the change, the callback function is executed when the update is completed.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.setState({\n     *   target: document.querySelector(\".target\"),\n     * }, () => {\n     *   moveable.dragStart(e);\n     * })\n     */\n    public setState(state: Partial<MoveableOptions>, callback?: () => any) {\n        this.innerMoveable.setState(state, callback);\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @param - the values of x and y to move moveable.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(): void {\n        this.getMoveable().updateTarget();\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy() {\n        render(\"\", this.tempElement);\n        this.off();\n        this.tempElement = null;\n        this.innerMoveable = null;\n    }\n    private getMoveable() {\n        return this.innerMoveable.preactMoveable;\n    }\n}\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n/**\n * Whether or not target can be resized. (default: false)\n * @name Moveable#resizable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.resizable = true;\n */\n/**\n * Whether or not target can scaled. (default: false)\n * @name Moveable#scalable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.keepRatio = true;\n */\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n/**\n * throttle of x, y when drag.\n * @name Moveable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n/**\n * throttle of width, height when resize.\n * @name Moveable#throttleResize\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleResize = 1;\n */\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n /**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable#snappable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n * When you drag, make the snap in the center of the target. (default: false)\n * @name Moveable#snapCenter\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapCenter = true;\n */\n\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable#snapThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable#horizontalGuidlines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidlines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable#\n * moveable.verticalGuidlines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidlines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable#elementGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries. (default: [])\n * @name Moveable#bounds\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n/**\n * You can specify the className of the moveable controlbox. (default: \"\")\n * @name Moveable#className\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Whether or not target can be scrolled to the scroll container (default: false)\n * @name Moveable#scrollable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied (default: container)\n * @name Moveable#scrollContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area. (default: 0)\n * @name Moveable#scrollThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position. (default: Function)\n * @name Moveable#getScrollPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable\n * @event dragStart\n * @param {Moveable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable\n * @event drag\n * @param {Moveable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable\n * @event dragEnd\n * @param {Moveable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n /**\n * When the group drag starts, the `dragGroupStart` event is called.\n * @memberof Moveable\n * @event dragGroupStart\n * @param {Moveable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupStart\", ({ targets }) => {\n *     console.log(\"onDragGroupStart\", targets);\n * });\n */\n\n /**\n * When the group drag, the `dragGroup` event is called.\n * @memberof Moveable\n * @event dragGroup\n * @param {Moveable.onDragGroup} - Parameters for the `dragGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroup\", ({ targets, events }) => {\n *     console.log(\"onDragGroup\", targets);\n *     events.forEach(ev => {\n *          // drag event\n *          console.log(\"onDrag left, top\", ev.left, ev.top);\n *          // ev.target!.style.left = `${ev.left}px`;\n *          // ev.target!.style.top = `${ev.top}px`;\n *          console.log(\"onDrag translate\", ev.dist);\n *          ev.target!.style.transform = ev.transform;)\n *     });\n * });\n */\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable\n * @event dragGroupEnd\n * @param {Moveable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable\n * @event resizeStart\n * @param {Moveable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable\n * @event resize\n * @param {Moveable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable\n * @event resizeEnd\n * @param {Moveable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable\n * @event scaleStart\n * @param {Moveable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, the scale event is called.\n * @memberof Moveable\n * @event scale\n * @param {Moveable.OnScale} - Parameters for the scale event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the scaleEnd event is called.\n * @memberof Moveable\n * @event scaleEnd\n * @param {Moveable.OnScaleEnd} - Parameters for the scaleEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable\n * @event rotateStart\n * @param {Moveable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When rotating, the rotate event is called.\n * @memberof Moveable\n * @event rotate\n * @param {Moveable.OnRotate} - Parameters for the rotate event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotate\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable\n * @event rotateEnd\n * @param {Moveable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable\n* @event warpStart\n* @param {Moveable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable\n * @event warp\n * @param {Moveable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable\n * @event warpEnd\n * @param {Moveable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable\n * @event pinchStart\n * @param {Moveable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable\n * @event pinch\n * @param {Moveable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable\n * @event pinchEnd\n * @param {Moveable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n /**\n * When the group resize starts, the `resizeGroupStart` event is called.\n * @memberof Moveable\n * @event resizeGroupStart\n * @param {Moveable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupStart\", ({ targets }) => {\n *     console.log(\"onResizeGroupStart\", targets);\n * });\n */\n\n /**\n * When the group resize, the `resizeGroup` event is called.\n * @memberof Moveable\n * @event resizeGroup\n * @param {Moveable.onResizeGroup} - Parameters for the `resizeGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroup\", ({ targets, events }) => {\n *     console.log(\"onResizeGroup\", targets);\n *     events.forEach(ev => {\n *         const offset = [\n *             direction[0] < 0 ? -ev.delta[0] : 0,\n *             direction[1] < 0 ? -ev.delta[1] : 0,\n *         ];\n *         // ev.drag is a drag event that occurs when the group resize.\n *         const left = offset[0] + ev.drag.beforeDist[0];\n *         const top = offset[1] + ev.drag.beforeDist[1];\n *         const width = ev.width;\n *         const top = ev.top;\n *     });\n * });\n */\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable\n * @event resizeGroupEnd\n * @param {Moveable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n\n /**\n * When the group scale starts, the `scaleGroupStart` event is called.\n * @memberof Moveable\n * @event scaleGroupStart\n * @param {Moveable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupStart\", ({ targets }) => {\n *     console.log(\"onScaleGroupStart\", targets);\n * });\n */\n\n /**\n * When the group scale, the `scaleGroup` event is called.\n * @memberof Moveable\n * @event scaleGroup\n * @param {Moveable.OnScaleGroup} - Parameters for the `scaleGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroup\", ({ targets, events }) => {\n *     console.log(\"onScaleGroup\", targets);\n *     events.forEach(ev => {\n *         const target = ev.target;\n *         // ev.drag is a drag event that occurs when the group scale.\n *         const left = ev.drag.beforeDist[0];\n *         const top = ev.drag.beforeDist[1];\n *         const scaleX = ev.scale[0];\n *         const scaleY = ev.scale[1];\n *     });\n * });\n */\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable\n * @event scaleGroupEnd\n * @param {Moveable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable\n * @event rotateGroupStart\n * @param {Moveable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n /**\n * When the group rotate, the `rotateGroup` event is called.\n * @memberof Moveable\n * @event rotateGroup\n * @param {Moveable.OnRotateGroup} - Parameters for the `rotateGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroup\", ({ targets, events }) => {\n *     console.log(\"onRotateGroup\", targets);\n *     events.forEach(ev => {\n *         const target = ev.target;\n *         // ev.drag is a drag event that occurs when the group rotate.\n *         const left = ev.drag.beforeDist[0];\n *         const top = ev.drag.beforeDist[1];\n *         const deg = ev.beforeDist;\n *     });\n * });\n */\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable\n * @event rotateGroupEnd\n * @param {Moveable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable\n * @event pinchGroupStart\n * @param {Moveable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable\n * @event pinchGroup\n * @param {Moveable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable\n * @event pinchGroupEnd\n * @param {Moveable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable\n * @event scroll\n * @param {Moveable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable\n * @event scrollGroup\n * @param {Moveable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\ninterface Moveable extends MoveableGetterSetter {\n    on(eventName: \"drag\", handlerToAttach: (event: OnDrag) => any): this;\n    on(eventName: \"dragStart\", handlerToAttach: (event: OnDragStart) => any): this;\n    on(eventName: \"dragEnd\", handlerToAttach: (event: OnDragEnd) => any): this;\n    on(eventName: \"dragGroup\", handlerToAttach: (event: OnDragGroup) => any): this;\n    on(eventName: \"dragGroupStart\", handlerToAttach: (event: OnDragGroupStart) => any): this;\n    on(eventName: \"dragGroupEnd\", handlerToAttach: (event: OnDragGroupEnd) => any): this;\n\n    on(eventName: \"resize\", handlerToAttach: (event: OnResize) => any): this;\n    on(eventName: \"resizeStart\", handlerToAttach: (event: OnResizeStart) => any): this;\n    on(eventName: \"resizeEnd\", handlerToAttach: (event: OnResizeEnd) => any): this;\n    on(eventName: \"resizeGroup\", handlerToAttach: (event: OnResizeGroup) => any): this;\n    on(eventName: \"resizeGroupStart\", handlerToAttach: (event: OnResizeGroupStart) => any): this;\n    on(eventName: \"resizeGroupEnd\", handlerToAttach: (event: OnResizeGroupEnd) => any): this;\n\n    on(eventName: \"scale\", handlerToAttach: (event: OnScale) => any): this;\n    on(eventName: \"scaleStart\", handlerToAttach: (event: OnScaleStart) => any): this;\n    on(eventName: \"scaleEnd\", handlerToAttach: (event: OnScaleEnd) => any): this;\n    on(eventName: \"scaleGroup\", handlerToAttach: (event: OnScaleGroup) => any): this;\n    on(eventName: \"scaleGroupStart\", handlerToAttach: (event: OnScaleGroupStart) => any): this;\n    on(eventName: \"scaleGroupEnd\", handlerToAttach: (event: OnScaleGroupEnd) => any): this;\n\n    on(eventName: \"rotate\", handlerToAttach: (event: OnRotate) => any): this;\n    on(eventName: \"rotateStart\", handlerToAttach: (event: OnRotateStart) => any): this;\n    on(eventName: \"rotateEnd\", handlerToAttach: (event: OnRotateEnd) => any): this;\n    on(eventName: \"rotateGroup\", handlerToAttach: (event: OnRotateGroup) => any): this;\n    on(eventName: \"rotateGroupStart\", handlerToAttach: (event: OnRotateGroupStart) => any): this;\n    on(eventName: \"rotateGroupEnd\", handlerToAttach: (event: OnRotateGroupEnd) => any): this;\n\n    on(eventName: \"warp\", handlerToAttach: (event: OnWarp) => any): this;\n    on(eventName: \"warpStart\", handlerToAttach: (event: OnWarpStart) => any): this;\n    on(eventName: \"warpEnd\", handlerToAttach: (event: OnWarpEnd) => any): this;\n\n    on(eventName: \"pinch\", handlerToAttach: (event: OnPinch) => any): this;\n    on(eventName: \"pinchStart\", handlerToAttach: (event: OnPinchStart) => any): this;\n    on(eventName: \"pinchEnd\", handlerToAttach: (event: OnPinchEnd) => any): this;\n    on(eventName: \"pinchGroup\", handlerToAttach: (event: OnPinchGroup) => any): this;\n    on(eventName: \"pinchGroupStart\", handlerToAttach: (event: OnPinchGroupStart) => any): this;\n    on(eventName: \"pinchGroupEnd\", handlerToAttach: (event: OnPinchGroupEnd) => any): this;\n\n    on(eventName: \"click\", handlerToAttach: (event: OnClick) => any): this;\n    on(eventName: \"clickGroup\", handlerToAttach: (event: OnClickGroup) => any): this;\n\n    on(eventName: \"scroll\", handlerToAttach: (event: OnScroll) => any): this;\n    on(eventName: \"scrollGroup\", handlerToAttach: (event: OnScrollGroup) => any): this;\n\n    on(eventName: \"renderStart\", handlerToAttach: (event: OnRenderStart) => any): this;\n    on(eventName: \"render\", handlerToAttach: (event: OnRender) => any): this;\n    on(eventName: \"renderEnd\", handlerToAttach: (event: OnRenderEnd) => any): this;\n    on(eventName: \"renderGroupStart\", handlerToAttach: (event: OnRenderGroupStart) => any): this;\n    on(eventName: \"renderGroup\", handlerToAttach: (event: OnRenderGroup) => any): this;\n    on(eventName: \"renderGroupEnd\", handlerToAttach: (event: OnRenderGroupEnd) => any): this;\n\n    on(eventName: string, handlerToAttach: (event: { [key: string]: any }) => any): this;\n    on(events: { [key: string]: (event: { [key: string]: any }) => any }): this;\n}\n\nexport default Moveable;\n","export const codes = {\n    draggable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\n/* const translate = [0, 0]; */\nconst draggable = new Moveable(document.body, {\n    target: document.querySelector(\".draggable\"),\n    draggable: true,\n    throttleDrag: 0,\n}).on(\"drag\", ({ target, left, top, beforeDelta }) => {\n    target.style.left = left + \"px\";\n    target.style.top = top + \"px\";\n\n    /* translate[0] += beforeDelta[0]; */\n    /* translate[1] += beforeDelta[1]; */\n    /* target.style.transform\n        = \"translateX(\" + translate[0] + \"px) \"\n        + \"translateY(\" + translate[1] + \"px)\"; */\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\nthis.translate = [0, 0];\nreturn (\n    <Moveable\n        target={document.querySelector(\".draggable\")}\n        draggable={true}\n        throttleDrag={0}\n        onDrag={({ target, left, top, beforeDelta }) => {\n            target.style.left = left + \"px\";\n            target.style.top = top + \"px\";\n\n            /* const translate = this.translate */\n            /* translate[0] += beforeDelta[0]; */\n            /* translate[1] += beforeDelta[1]; */\n            /* target.style.transform\n                = \"translateX(\" + translate[0] + \"px) \"\n                + \"translateY(\" + translate[1] + \"px)\"; */\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [draggable]=\"true\"\n    [throttleDrag]=\"0\"\n    (drag)=\"onDrag($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    translate = [0, 0];\n    onDrag({ target, left, top, beforeDelta }) {\n        target.style.left = left + \"px\";\n        target.style.top = top + \"px\";\n\n        /* const translate = this.translate */\n        /* translate[0] += beforeDelta[0]; */\n        /* translate[1] += beforeDelta[1]; */\n        /* target.style.transform\n            = \"translateX(\" + translate[0] + \"px) \"\n            + \"translateY(\" + translate[1] + \"px)\"; */\n    }\n}\n`,\n    },\n    resizable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\nconst resizable = new Moveable(document.body, {\n    target: document.querySelector(\".resizable\"),\n    resizable: true,\n    throttleResize: 0,\n    keepRatio: true,\n}).on(\"resize\", ({ target, width, height, dist }) => {\n    console.log(width, height, dist);\n    target.style.width = width + \"px\";\n    target.style.height = height + \"px\";\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nreturn (\n    <Moveable\n        target={document.querySelector(\".resizable\")}\n        resizable={true}\n        throttleResize={0}\n        keepRatio={true}\n        onResize={({ target, width, height, dist }) => {\n            console.log(width, height, dist);\n            target.style.width = width + \"px\";\n            target.style.height = height + \"px\";\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [resizable]=\"true\"\n    [throttleResize]=\"0\"\n    [keepRatio]=\"true\"\n    (resize)=\"onResize($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    onResize({ target, width, height, dist }) {\n        console.log(width, height, dist);\n        target.style.width = width + \"px\";\n        target.style.height = height + \"px\";\n    }\n}\n        `,\n    },\n    scalable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\nconst scale = [1, 1];\nconst scalable = new Moveable(document.body, {\n    target: document.querySelector(\".scalable\"),\n    scalable: true,\n    throttleScale: 0,\n    keepRatio: true,\n}).on(\"scale\", ({ target, delta }) => {\n    scale[0] *= delta[0];\n    scale[1] *= delta[1];\n    target.style.transform = \"scale(\" + scale[0] +  \",\" + scale[1] + \")\";\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nthis.scale = [1, 1];\nreturn (\n    <Moveable\n        target={document.querySelector(\".scalable\")}\n        scalable={true}\n        throttleScale={0}\n        keepRatio={true}\n        onScale={({ target, delta }) => {\n            const scale = this.scale;\n            scale[0] *= delta[0];\n            scale[1] *= delta[1];\n            target.style.transform\n                = \"scale(\" + scale[0] +  \",\" + scale[1] + \")\";\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [scalable]=\"true\"\n    [throttleScale]=\"0\"\n    [keepRatio]=\"true\"\n    (scale)=\"onScale($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    scale = [1, 1];\n    onScale({ target, delta }) {\n        const scale = this.scale;\n        scale[0] *= delta[0];\n        scale[1] *= delta[1];\n        target.style.transform\n            = \"scale(\" + scale[0] +  \",\" + scale[1] + \")\";\n    }\n}\n        `,\n    },\n    rotatable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\nlet rotate = 0;\n\nconst rotatable = new Moveable(document.body, {\n    target: document.querySelector(\".rotatable\"),\n    rotatable: true,\n    throttleRotate: 0,\n}).on(\"rotate\", ({ target, beforeDelta, delta }) => {\n    rotate += delta;\n    target.style.transform\n        = \"rotate(\" + rotate +  \"deg)\";\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nthis.rotate = 0;\n\nreturn (\n    <Moveable\n        target={document.querySelector(\".rotatable\")}\n        rotatable={true}\n        throttleRotate={0}\n        onRotate={({ target, beforeDelta, delta }) => {\n            this.rotate += delta;\n            target.style.transform\n                = \"rotate(\" + this.rotate +  \"deg)\";\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [rotatable]=\"true\"\n    [throttleRotate]=\"0\"\n    [keepRatio]=\"true\"\n    (rotate)=\"onRotate($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    rotate = 0;\n    onRotate({ target, delta }) {\n        this.rotate += delta;\n        target.style.transform\n            = \"rotate(\" + this.rotate +  \"deg)\";\n    }\n}\n        `,\n    },\n    warpable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\nlet matrix = [\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1,\n];\n\nconst warpable = new Moveable(document.body, {\n    target: document.querySelector(\".warpable\"),\n    warpable: true,\n    throttleRotate: 0,\n}).on(\"warp\", ({ target, multiply, delta }) => {\n    matrix = multiply(matrix, delta);\n    target.style.transform\n        = \"matrix3d(\" + matrix.join(\",\") +  \")\";\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nthis.matrix = [\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1,\n];\n\nreturn (\n    <Moveable\n        target={document.querySelector(\".warpable\")}\n        warpable={true}\n        onWarp={({ target, multiply, delta }) => {\n            this.matrix = multiply(this.matrix, delta);\n            target.style.transform\n                = \"matrix3d(\" + matrix.join(\",\") +  \")\";\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [warpable]=\"true\"\n    (warp)=\"onWarp($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    matrix = [\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1,\n    ];\n    onWarp({ target, dist }) {\n        this.matrix = multiply(this.matrix, delta);\n        target.style.transform\n            = \"matrix3d(\" + matrix.join(\",\") +  \")\";\n    }\n}\n        `,\n    },\n    pinchable: {\n        vanilla: `\nimport Moveable from \"moveable\";\nconst scale = [1, 1];\nlet rotate = 0;\n\nconst pinchable = new Moveable(document.body, {\n    target: document.querySelector(\".pinchable\"),\n    pinchable: [\"rotatable\", \"scalable\"],\n}).on(\"rotate\", ({ target, beforeDelta }) => {\n    rotate += beforeDelta;\n    target.style.transform = \"scale(\" + scale.join(\", \") + \") rotate(\" + rotate + \"deg)\";\n}).on(\"scale\", ({ target, delta }) => {\n    scale[0] *= delta[0];\n    scale[1] *= delta[1];\n    target.style.transform = \"scale(\" + scale.join(\", \") + \") rotate(\" + rotate + \"deg)\";\n});`,\n        react: `\nimport Moveable from \"react-moveable\";\nthis.scale = [1, 1];\nthis.rotate = 0;\n\nreturn (\n    <Moveable\n        target={document.querySelector(\".pinchable\")}\n        pinchable={[\"rotatable\", \"scalable\"]},\n        onRotate={({ target, beforeDelta }) => {\n            this.rotate += beforeDelta;\n            target.style.transform\n                = \"scale(\" + this.scale.join(\", \") + \") \"\n                + \"rotate(\" + this.rotate + \"deg)\";\n        }}\n        onScale={({ target, beforeDelta }) => {\n            this.scale[0] *= delta[0];\n            this.scale[1] *= delta[1];\n            target.style.transform\n                = \"scale(\" + this.scale.join(\", \") + \") \"\n                + \"rotate(\" + this.rotate + \"deg)\";\n        }}\n    />\n);`,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n    <div #target class=\"target\">target</div>\n    <ngx-moveable\n        [target]=\"target\"\n        [pinchable]=\"['rotatable', 'scalable']\"\n        [rotate]=\"onRotate($event)\"\n        [scale]=\"onScale($event)\"\n/>\n${\"`\"},\n})\nexport class AppComponent {\n    scale = [1, 1];\n    rotate = 0;\n    onRotate({ target, beforeDelta }) {\n        this.rotate += beforeDelta;\n        target.style.transform\n            = \"scale(\" + this.scale.join(\", \") + \") \"\n            + \"rotate(\" + this.rotate + \"deg)\";\n    }\n    onScale({ target, beforeDelta }) {\n        this.scale[0] *= delta[0];\n        this.scale[1] *= delta[1];\n        target.style.transform\n            = \"scale(\" + this.scale.join(\", \") + \") \"\n            + \"rotate(\" + this.rotate + \"deg)\";\n    }\n}\n`,\n    },\n    snappable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\nconst snappable = new Moveable(document.body, {\n    target: document.querySelector(\".snappable\"),\n    snappable: true,\n    verticalGuidelines: [0, 150, 200],\n    horizontalGuidelines: [0, 150, 200],\n}).on(\"drag\", ({ target, left, top }) => {\n    target.style.left = left + \"px\";\n    target.style.top = top + \"px\";\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nreturn (\n    <Moveable\n        target={document.querySelector(\".origin\")}\n        origin={true}\n        snappable={true}\n        verticalGuidelines={[0, 150, 200]}\n        horizontalGuidelines={[0, 150, 200]}\n        onDrag={({ target, left, top }) => {\n            target.style.left = left + \"px\";\n            target.style.top = top + \"px\";\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [snappable]=\"true\"\n    [verticalGuidelines]=\"[0, 150, 200]\"\n    [horizontalGuidelines]=\"[0, 150, 200]\"\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    onDrag({ target, left, top }) {\n        target.style.left = left + \"px\";\n        target.style.top = top + \"px\";\n    }\n}\n`,\n    },\n    groupable: {\n        vanilla: `\nimport Moveable from \"moveable\";\nconst poses = [\n    [0, 0],\n    [0, 0],\n    [0, 0],\n];\nconst target = [].slice.call(\n    document.querySelectorAll(\".target\"),\n);\nconst groupable = new Moveable(document.body, {\n    target,\n    draggable: true,\n}).on(\"dragGroup\", ({ events }) => {\n    events.forEach(({ target, beforeDelta }, i) => {\n        poses[i][0] += beforeDelta[0];\n        poses[i][1] += beforeDelta[1];\n\n        target.style.transform\n            = \"translate(\"\n            + poses[i][0] + \"px, \"\n            + poses[i][1] + \"px)\";\n    });\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nthis.poses = [\n    [0, 0],\n    [0, 0],\n    [0, 0],\n];\n\nconst target = [].slice.call(\n    document.querySelectorAll(\".target\"),\n);\nreturn (\n    <Moveable\n        target={target}\n        draggable={true}\n        onDragGroup={({ events }) => {\n            events.forEach(({ target, beforeDelta }, i) => {\n                this.poses[i][0] += beforeDelta[0];\n                this.poses[i][1] += beforeDelta[1];\n\n                target.style.transform\n                    = \"translate(\"\n                    + this.poses[i][0] + \"px, \"\n                    + this.poses[i][1] + \"px)\";\n            });\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target1 class=\"target\">target1</div>\n<div #target2 class=\"target\">target2</div>\n<div #target3 class=\"target\">target3</div>\n<ngx-moveable\n    [target]=\"[target1, target2, target3]\"\n    [draggable]=\"true\"\n    (dragGroup)=\"onDragGroup($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    poses = [\n        [0, 0],\n        [0, 0],\n        [0, 0],\n    ];\n    onDragGroup({ events }) {\n        events.forEach(({ target, beforeDelta }, i) => {\n            this.poses[i][0] += beforeDelta[0];\n            this.poses[i][1] += beforeDelta[1];\n\n            target.style.transform\n                = \"translate(\"\n                + this.poses[i][0] + \"px, \"\n                + this.poses[i][1] + \"px)\";\n        });\n    }\n}\n        `,\n    },\n};\n","import { Frame } from \"scenejs\";\nimport Moveable from \"../../src/Moveable\";\nimport Dragger from \"@daybrush/drag\";\nimport agent from \"@egjs/agent\";\nimport KeyContoller from \"keycon\";\nimport { addClass, removeClass, hasClass } from \"@daybrush/utils\";\n\nconst uaInfo = agent();\nconst isMobile = uaInfo.isMobile || uaInfo.os.name.indexOf(\"ios\") > -1 || uaInfo.browser.name.indexOf(\"safari\") > -1;\n\nisMobile && addClass(document.body, \"mobile\");\nconst editorElement: HTMLElement = document.querySelector(\".editor\");\nconst labelElement: HTMLElement = document.querySelector(\".label\");\nconst controlsElement: HTMLElement = document.querySelector(\".controls\");\nconst rulersElement = document.querySelector(\".rulers\");\nconst guidelinesElement = document.querySelector(\".guidelines\");\nconst horizontalRulerElement = rulersElement.querySelector(\".ruler.horizontal\");\nconst verticalRulerElement = rulersElement.querySelector(\".ruler.vertical\");\nconst horizontalDivisionsElement = horizontalRulerElement.querySelector(\".divisions\");\nconst verticalDivisionsElement = document.querySelector(\".ruler.vertical .divisions\");\nconst controlXElement: HTMLInputElement = document.querySelector(`.control input[name=\"x\"]`);\nconst controlYElement: HTMLInputElement = document.querySelector(`.control input[name=\"y\"]`);\nconst controlWElement: HTMLInputElement = document.querySelector(`.control input[name=\"w\"]`);\nconst controlHElement: HTMLInputElement = document.querySelector(`.control input[name=\"h\"]`);\nconst controlRElement: HTMLInputElement = document.querySelector(`.control input[name=\"r\"]`);\n\nconst divisions = [];\nfor (let i = 0; i <= 500; ++i) {\n    divisions.push(`<div class=\"division\" data-px=\"${i * 5}\"></div>`);\n}\nhorizontalDivisionsElement.innerHTML = divisions.join(\"\");\nverticalDivisionsElement.innerHTML = divisions.join(\"\");\n\nconst moveableTarget: HTMLElement = document.querySelector(\".moveable.target\");\nconst frame = new Frame({\n    left: \"0px\",\n    top: \"0px\",\n    width: \"250px\",\n    height: \"200px\",\n    transform: {\n        translateX: `${window.innerWidth / 2 - 125}px`,\n        translateY: `${Math.max(700, window.innerHeight) / 2 - 250}px`,\n        rotate: \"0deg\",\n        scaleX: 1,\n        scaleY: 1,\n    },\n});\n\nfunction addControlEvent(el: HTMLInputElement, callback: (value: any) => void) {\n    function eventCallback() {\n        callback(el.value);\n        applyCSS();\n        moveable.updateRect();\n    }\n    new KeyContoller(el).keyup(\"enter\", eventCallback);\n    el.addEventListener(\"blur\", eventCallback);\n}\n\nfunction move(translate: number[]) {\n    frame.set(\"transform\", \"translateX\", `${translate[0]}px`);\n    frame.set(\"transform\", \"translateY\", `${translate[1]}px`);\n    controlXElement.value = `${translate[0]}`;\n    controlYElement.value = `${translate[1]}`;\n}\nfunction applyCSS() {\n    moveableTarget.style.cssText += frame.toCSS();\n}\n\naddControlEvent(controlXElement, value => {\n    frame.set(\"transform\", \"translateX\", `${parseFloat(value)}px`);\n});\naddControlEvent(controlYElement, value => {\n    frame.set(\"transform\", \"translateY\", `${parseFloat(value)}px`);\n});\naddControlEvent(controlWElement, value => {\n    frame.set(\"width\", `${parseFloat(value)}px`);\n});\naddControlEvent(controlHElement, value => {\n    frame.set(\"height\", `${parseFloat(value)}px`);\n});\naddControlEvent(controlRElement, value => {\n    frame.set(\"transform\", \"rotate\", `${parseFloat(value)}deg`);\n});\n\ncontrolXElement.value = `${parseFloat(frame.get(\"transform\", \"translateX\"))}`;\ncontrolYElement.value = `${parseFloat(frame.get(\"transform\", \"translateY\"))}`;\napplyCSS();\n\nlet isPinchStart = false;\n\nconst moveable = new Moveable(editorElement, {\n    target: moveableTarget,\n    draggable: true,\n    resizable: true,\n    rotatable: true,\n    snappable: true,\n    pinchable: true,\n    snapCenter: true,\n    snapThreshold: 10,\n    throttleResize: 0,\n    throttleRotate: 1,\n    keepRatio: false,\n    origin: false,\n    bounds: {\n        left: 30,\n        top: 30,\n    },\n}).on(\"dragStart\", ({ set }) => {\n    set([\n        parseFloat(frame.get(\"transform\", \"translateX\")),\n        parseFloat(frame.get(\"transform\", \"translateY\")),\n    ]);\n}).on(\"drag\", ({ beforeTranslate }) => {\n    move(beforeTranslate);\n}).on(\"rotateStart\", ({ set }) => {\n    set(parseFloat(frame.get(\"transform\", \"rotate\")));\n}).on(\"rotate\", ({ beforeRotate, clientX, clientY, isPinch }) => {\n    frame.set(\"transform\", \"rotate\", `${beforeRotate}deg`);\n    controlRElement.value = `${beforeRotate}°`;\n    !isPinch && setLabel(clientX, clientY, `${beforeRotate}°`);\n}).on(\"resizeStart\", ({ setOrigin, dragStart }) => {\n    setOrigin([\"%\", \"%\"]);\n    dragStart && dragStart.set([\n        parseFloat(frame.get(\"transform\", \"translateX\")),\n        parseFloat(frame.get(\"transform\", \"translateY\")),\n    ]);\n\n}).on(\"resize\", ({ width, height, drag, clientX, clientY , isPinch }) => {\n    frame.set(\"width\", `${width}px`);\n    frame.set(\"height\", `${height}px`);\n\n    move(drag.beforeTranslate);\n    controlWElement.value = `${width}`;\n    controlHElement.value = `${height}`;\n    !isPinch && setLabel(clientX, clientY, `${width} X ${height}`);\n}).on(\"pinchStart\", () => {\n    isPinchStart = true;\n}).on(\"pinch\", ({ clientX, clientY }) => {\n    setLabelCSS(clientX, clientY);\n}).on(\"render\", () => {\n    if (isPinchStart) {\n        labelElement.innerHTML\n            = `W: ${parseFloat(frame.get(\"width\"))}<br/>`\n            + `H: ${parseFloat(frame.get(\"height\"))}<br/>`\n            + `R: ${parseFloat(frame.get(\"transform\", \"rotate\"))}°`;\n    }\n    // no isPinch\n    applyCSS();\n}).on(\"renderEnd\", () => {\n    isPinchStart = false;\n    hideLabel();\n});\nfunction setLabelCSS(clientX: number, clientY: number) {\n    labelElement.style.cssText\n        = `display: block; transform: translate(${clientX}px, ${clientY - 10}px) translate(-100%, -100%);`;\n}\nfunction setLabel(clientX: number, clientY: number, text: string) {\n    setLabelCSS(clientX, clientY);\n    labelElement.innerHTML = text;\n}\nfunction hideLabel() {\n    labelElement.style.display = \"none\";\n}\nfunction snap(poses, targetPos) {\n    let nextPos = targetPos;\n    let snapDist = Infinity;\n\n    poses.forEach(pos => {\n        const dist = Math.abs(pos - targetPos);\n        if (dist > 10) {\n            return;\n        }\n        if (snapDist > dist) {\n            snapDist = dist;\n            nextPos = pos;\n        }\n    });\n\n    return nextPos;\n}\nfunction dragStartGuideline({ datas, clientX, clientY }) {\n    const rect = moveableTarget.getBoundingClientRect();\n    const type = datas.type;\n    const guideline = datas.guideline;\n\n    datas.verticalPoses = [rect.left, rect.left + rect.width];\n    datas.horizontalPoses = [rect.top, rect.top + rect.height];\n    datas.isHorizontal = type === \"horizontal\";\n    datas.offset = datas.isHorizontal ? controlsElement.offsetHeight - document.documentElement.scrollTop : 0;\n    addClass(guideline, \"dragging\");\n\n    dragGuideline({ datas, clientX, clientY });\n}\n\nfunction dragGuideline({ clientX, clientY, datas }) {\n    const { guideline, isHorizontal, offset} = datas;\n    const style = guideline.style;\n\n    if (isHorizontal) {\n        const nextPos = snap(datas.horizontalPoses, clientY) - offset;\n\n        style.top = `${nextPos}px`;\n\n        return nextPos;\n    } else {\n        const nextPos = snap(datas.verticalPoses, clientX) - offset;\n\n        style.left = `${nextPos}px`;\n\n        return nextPos - offset;\n    }\n}\n\nfunction dragEndGuideline({ datas, clientX, clientY }) {\n    const el = datas.guideline;\n    const clientPos = dragGuideline({ datas, clientX, clientY });\n\n    if (clientPos < 30) {\n        guidelinesElement.removeChild(el);\n        return;\n    }\n    el.setAttribute(\"data-position\", clientPos);\n\n    removeClass(el, \"dragging\");\n    refreshGuidelines();\n}\nfunction refreshGuidelines() {\n    const centerX = window.innerWidth / 2 + 15;\n    const centerY = window.innerHeight / 2;\n\n    const horizontalGuidelines = [centerY];\n    const verticalGuidelines = [centerX];\n    [].slice.call(guidelinesElement.children).forEach(guideline => {\n        const type = guideline.getAttribute(\"data-type\");\n        const pos = parseFloat(guideline.getAttribute(\"data-position\"));\n        (type === \"horizontal\" ? horizontalGuidelines : verticalGuidelines).push(pos);\n    });\n    moveable.verticalGuidelines = verticalGuidelines;\n    moveable.horizontalGuidelines = horizontalGuidelines;\n}\nnew Dragger(guidelinesElement, {\n    container: document.body,\n    dragstart: ({ inputEvent, datas, clientX, clientY }) => {\n        const guideline = inputEvent.target;\n\n        if (hasClass(guideline, \"horizontal\")) {\n            datas.type = \"horizontal\";\n        } else if (hasClass(guideline, \"vertical\")) {\n            datas.type = \"vertical\";\n        } else {\n            return false;\n        }\n        datas.guideline = guideline;\n\n        dragStartGuideline({ datas, clientX, clientY });\n        inputEvent.stopPropagation();\n        inputEvent.preventDefault();\n    },\n    drag: dragGuideline,\n    dragend: dragEndGuideline,\n});\n\nnew Dragger(rulersElement, {\n    container: document.body,\n    dragstart: ({ inputEvent, datas, clientX, clientY }) => {\n        const ruler = inputEvent.target;\n\n        if (ruler === horizontalRulerElement) {\n            datas.type = \"horizontal\";\n        } else if (ruler === verticalRulerElement) {\n            datas.type = \"vertical\";\n        } else {\n            return false;\n        }\n        const el = document.createElement(\"div\");\n        const type = datas.type;\n\n        el.className = `guideline ${type}`;\n        el.setAttribute(\"data-type\", type);\n\n        datas.guideline = el;\n\n        dragStartGuideline({ datas, clientX, clientY });\n        guidelinesElement.appendChild(el);\n\n        inputEvent.stopPropagation();\n        inputEvent.preventDefault();\n    },\n    drag: dragGuideline,\n    dragend: dragEndGuideline,\n});\n\nfunction toggleShift(shiftKey) {\n    if (shiftKey) {\n        moveable.throttleRotate = 30;\n        moveable.keepRatio = true;\n    } else {\n        moveable.throttleRotate = 1;\n        moveable.keepRatio = false;\n    }\n}\nKeyContoller.global.on(\"keydown\", ({ shiftKey }) => {\n    toggleShift(shiftKey);\n}).on(\"keyup\", ({ shiftKey }) => {\n    toggleShift(shiftKey);\n});\n\nwindow.addEventListener(\"resize\", () => {\n    refreshGuidelines();\n    moveable.updateRect();\n});\n\ndocument.body.addEventListener(\"gesturestart\", e => {\n    e.preventDefault();\n});\nrefreshGuidelines();\n","import Moveable from \"../../src/Moveable\";\nimport { codes } from \"./consts\";\nimport \"./Editor\";\nimport \"./index.css\";\nimport \"./editor.css\";\n\ndeclare const hljs: any;\n\nconst draggableElement: HTMLElement = document.querySelector(\".draggable\");\nconst draggable = new Moveable(draggableElement.parentElement, {\n    target: draggableElement,\n    origin: false,\n    draggable: true,\n}).on(\"drag\", ({ target, transform }) => {\n    target.style.transform = transform;\n});\n\nconst resizableElement: HTMLElement = document.querySelector(\".resizable\");\nconst resizable = new Moveable(resizableElement.parentElement, {\n    target: resizableElement,\n    origin: false,\n    resizable: true,\n}).on(\"resize\", ({ target, width, height }) => {\n    target.style.width = `${width}px`;\n    target.style.height = `${height}px`;\n});\n\nconst scalableElement: HTMLElement = document.querySelector(\".scalable\");\nconst scalable = new Moveable(scalableElement.parentElement, {\n    target: scalableElement,\n    origin: false,\n    scalable: true,\n}).on(\"scale\", ({ target, transform }) => {\n    target.style.transform = transform;\n});\n\nconst rotatableElement: HTMLElement = document.querySelector(\".rotatable\");\nconst rotatable = new Moveable(rotatableElement.parentElement, {\n    target: rotatableElement,\n    origin: false,\n    rotatable: true,\n}).on(\"rotate\", ({ target, transform }) => {\n    target.style.transform = transform;\n});\nconst warpableElement: HTMLElement = document.querySelector(\".warpable\");\nconst warpable = new Moveable(warpableElement.parentElement, {\n    target: warpableElement,\n    warpable: true,\n    origin: false,\n}).on(\"warp\", ({ target, transform }) => {\n    target.style.transform = transform;\n});\n\nconst snappableElement: HTMLElement = document.querySelector(\".snappable\");\nconst snappable = new Moveable(snappableElement.parentElement, {\n    target: snappableElement,\n    draggable: true,\n    snappable: true,\n    snapCenter: true,\n    origin: false,\n    verticalGuidelines: [0, 150, 200],\n    horizontalGuidelines: [0, 150, 200],\n}).on(\"drag\", ({ target, left, top }) => {\n    target.style.left = `${left}px`;\n    target.style.top = `${top}px`;\n});\n\nconst pinchableElement: HTMLElement = document.querySelector(\".pinchable\");\nconst scale = [1, 1];\nlet rotate = 0;\nconst pinchable = new Moveable(pinchableElement.parentElement, {\n    target: pinchableElement,\n    pinchable: [\"rotatable\", \"scalable\"],\n    origin: false,\n}).on(\"rotate\", ({ beforeDelta }) => {\n    rotate += beforeDelta;\n\n    pinchableElement.style.transform = `scale(${scale.join(\", \")}) rotate(${rotate}deg)`;\n}).on(\"scale\", ({ delta }) => {\n    scale[0] *= delta[0];\n    scale[1] *= delta[1];\n\n    pinchableElement.style.transform = `scale(${scale.join(\", \")}) rotate(${rotate}deg)`;\n});\n\nconst groupableElement: HTMLElement = document.querySelector(\".groupable\");\nconst poses = [\n    [0, 0],\n    [0, 0],\n    [0, 0],\n];\n\nconst groupable = new Moveable(groupableElement.parentElement, {\n    target: [].slice.call(groupableElement.querySelectorAll(\"span\")),\n    origin: false,\n    draggable: true,\n}).on(\"dragGroup\", ({ events }) => {\n    events.forEach(({ target, beforeDelta }, i) => {\n        poses[i][0] += beforeDelta[0];\n        poses[i][1] += beforeDelta[1];\n\n        target.style.transform = `translate(${poses[i][0]}px, ${poses[i][1]}px)`;\n    });\n});\n\nwindow.addEventListener(\"resize\", () => {\n    // moveable.updateRect();\n    draggable.updateRect();\n    resizable.updateRect();\n    scalable.updateRect();\n    rotatable.updateRect();\n    warpable.updateRect();\n    pinchable.updateRect();\n    groupable.updateRect();\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    document.querySelectorAll(\"pre\").forEach((pre: HTMLElement) => {\n        const group = pre.getAttribute(\"data-group\");\n        const panel = pre.getAttribute(\"data-panel\");\n        const block = pre.querySelector(\"code\");\n\n        let code = codes[group][panel === \"preact\" ? \"react\" : panel].trim();\n\n        if (panel === \"preact\") {\n            code = code.replace(/react/g, \"preact\");\n        }\n        block.innerText = code;\n        hljs.highlightBlock(block);\n    });\n});\n\nconst tabGroups = {};\n\n[].slice.call(document.querySelectorAll(\"[data-tab]\")).forEach(tabElement => {\n    const group = tabElement.getAttribute(\"data-group\");\n    const tab = tabElement.getAttribute(\"data-tab\");\n    const panelElement = document.querySelector(`[data-group=\"${group}\"][data-panel=\"${tab}\"]`);\n\n    !tabGroups[group] && (tabGroups[group] = []);\n    tabGroups[group].push([tabElement, panelElement]);\n\n    tabElement.addEventListener(\"click\", () => {\n        tabGroups[group].forEach(([otherTabElement, otherPanelElement]) => {\n            if (tabElement === otherTabElement) {\n                return;\n            }\n            otherTabElement.classList.remove(\"selected\");\n            otherPanelElement.classList.remove(\"selected\");\n        });\n        tabElement.classList.add(\"selected\");\n        panelElement.classList.add(\"selected\");\n    });\n});\n"],"names":["__extends","props","_super","_this","state","createPortal","h","Moveable","ref","parentElement","Component","PROPERTIES","EVENTS","options","document","createElement","nextOptions","container","events","forEach","name","camelize","e","trigger","render","InnerMoveable","tempElement","target","isArray","length","updateRect","getMoveable","isMoveableElement","dragStart","clientX","clientY","isInside","getRect","callback","innerMoveable","setState","updateTarget","off","preactMoveable","Properties","prototype","property","Object","defineProperty","get","set","value","_a","enumerable","configurable","EgComponent","codes","draggable","vanilla","react","angular","resizable","scalable","rotatable","warpable","pinchable","snappable","groupable","uaInfo","agent","isMobile","os","indexOf","browser","addClass","body","editorElement","querySelector","labelElement","controlsElement","rulersElement","guidelinesElement","horizontalRulerElement","verticalRulerElement","horizontalDivisionsElement","verticalDivisionsElement","controlXElement","controlYElement","controlWElement","controlHElement","controlRElement","divisions","i","push","innerHTML","join","moveableTarget","frame","Frame","left","top","width","height","transform","translateX","window","innerWidth","translateY","Math","max","innerHeight","rotate","scaleX","scaleY","addControlEvent","el","eventCallback","applyCSS","moveable","KeyContoller","keyup","addEventListener","move","translate","style","cssText","toCSS","parseFloat","isPinchStart","snapCenter","snapThreshold","throttleResize","throttleRotate","keepRatio","origin","bounds","on","beforeTranslate","beforeRotate","isPinch","setLabel","setOrigin","drag","setLabelCSS","hideLabel","text","display","snap","poses","targetPos","nextPos","snapDist","Infinity","pos","dist","abs","dragStartGuideline","datas","rect","getBoundingClientRect","type","guideline","verticalPoses","horizontalPoses","isHorizontal","offset","offsetHeight","documentElement","scrollTop","dragGuideline","dragEndGuideline","clientPos","removeChild","setAttribute","removeClass","refreshGuidelines","centerX","centerY","horizontalGuidelines","verticalGuidelines","slice","call","children","getAttribute","Dragger","dragstart","inputEvent","hasClass","stopPropagation","preventDefault","dragend","ruler","className","appendChild","toggleShift","shiftKey","global","draggableElement","resizableElement","scalableElement","rotatableElement","warpableElement","snappableElement","pinchableElement","scale","beforeDelta","delta","groupableElement","querySelectorAll","pre","group","panel","block","code","trim","replace","innerText","hljs","highlightBlock","tabGroups","tabElement","tab","panelElement","otherTabElement","otherPanelElement","classList","remove","add"],"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICOP,IAAMQ,MAAM,GAAGC,KAAK,EAApB;IACA,IAAMC,QAAQ,GAAGF,MAAM,CAACE,QAAP,IAAmBF,MAAM,CAACG,EAAP,CAAUnD,IAAV,CAAeoD,OAAf,CAAuB,KAAvB,IAAgC,CAAC,CAApD,IAAyDJ,MAAM,CAACK,OAAP,CAAerD,IAAf,CAAoBoD,OAApB,CAA4B,QAA5B,IAAwC,CAAC,CAAnH;IAEAF,QAAQ,IAAII,QAAQ,CAAC5D,QAAQ,CAAC6D,IAAV,EAAgB,QAAhB,CAApB;IACA,IAAMC,aAAa,GAAgB9D,QAAQ,CAAC+D,aAAT,CAAuB,SAAvB,CAAnC;IACA,IAAMC,YAAY,GAAgBhE,QAAQ,CAAC+D,aAAT,CAAuB,QAAvB,CAAlC;IACA,IAAME,eAAe,GAAgBjE,QAAQ,CAAC+D,aAAT,CAAuB,WAAvB,CAArC;IACA,IAAMG,aAAa,GAAGlE,QAAQ,CAAC+D,aAAT,CAAuB,SAAvB,CAAtB;IACA,IAAMI,iBAAiB,GAAGnE,QAAQ,CAAC+D,aAAT,CAAuB,aAAvB,CAA1B;IACA,IAAMK,sBAAsB,GAAGF,aAAa,CAACH,aAAd,CAA4B,mBAA5B,CAA/B;IACA,IAAMM,oBAAoB,GAAGH,aAAa,CAACH,aAAd,CAA4B,iBAA5B,CAA7B;IACA,IAAMO,0BAA0B,GAAGF,sBAAsB,CAACL,aAAvB,CAAqC,YAArC,CAAnC;IACA,IAAMQ,wBAAwB,GAAGvE,QAAQ,CAAC+D,aAAT,CAAuB,4BAAvB,CAAjC;IACA,IAAMS,eAAe,GAAqBxE,QAAQ,CAAC+D,aAAT,CAAuB,4BAAvB,CAA1C;IACA,IAAMU,eAAe,GAAqBzE,QAAQ,CAAC+D,aAAT,CAAuB,4BAAvB,CAA1C;IACA,IAAMW,eAAe,GAAqB1E,QAAQ,CAAC+D,aAAT,CAAuB,4BAAvB,CAA1C;IACA,IAAMY,eAAe,GAAqB3E,QAAQ,CAAC+D,aAAT,CAAuB,4BAAvB,CAA1C;IACA,IAAMa,eAAe,GAAqB5E,QAAQ,CAAC+D,aAAT,CAAuB,4BAAvB,CAA1C;IAEA,IAAMc,SAAS,GAAG,EAAlB;;IACA,KAAK,IAAIC,GAAC,GAAG,CAAb,EAAgBA,GAAC,IAAI,GAArB,EAA0B,EAAEA,GAA5B,EAA+B;IAC3BD,EAAAA,SAAS,CAACE,IAAV,CAAe,uCAAkCD,GAAC,GAAG,CAAtC,cAAf;IACH;;IACDR,0BAA0B,CAACU,SAA3B,GAAuCH,SAAS,CAACI,IAAV,CAAe,EAAf,CAAvC;IACAV,wBAAwB,CAACS,SAAzB,GAAqCH,SAAS,CAACI,IAAV,CAAe,EAAf,CAArC;IAEA,IAAMC,cAAc,GAAgBlF,QAAQ,CAAC+D,aAAT,CAAuB,kBAAvB,CAApC;IACA,IAAMoB,KAAK,GAAG,IAAIC,KAAJ,CAAU;IACpBC,EAAAA,IAAI,EAAE,KADc;IAEpBC,EAAAA,GAAG,EAAE,KAFe;IAGpBC,EAAAA,KAAK,EAAE,OAHa;IAIpBC,EAAAA,MAAM,EAAE,OAJY;IAKpBC,EAAAA,SAAS,EAAE;IACPC,IAAAA,UAAU,EAAKC,MAAM,CAACC,UAAP,GAAoB,CAApB,GAAwB,GAAxB,OADR;IAEPC,IAAAA,UAAU,EAAKC,IAAI,CAACC,GAAL,CAAS,GAAT,EAAcJ,MAAM,CAACK,WAArB,IAAoC,CAApC,GAAwC,GAAxC,OAFR;IAGPC,IAAAA,MAAM,EAAE,MAHD;IAIPC,IAAAA,MAAM,EAAE,CAJD;IAKPC,IAAAA,MAAM,EAAE;IALD;IALS,CAAV,CAAd;;IAcA,SAASC,eAAT,CAAyBC,EAAzB,EAA+C7E,QAA/C;IACI,WAAS8E,aAAT;IACI9E,IAAAA,QAAQ,CAAC6E,EAAE,CAAChE,KAAJ,CAAR;IACAkE,IAAAA,QAAQ;IACRC,IAAAA,QAAQ,CAACxF,UAAT;IACH;;IACD,MAAIyF,aAAJ,CAAiBJ,EAAjB,EAAqBK,KAArB,CAA2B,OAA3B,EAAoCJ,aAApC;IACAD,EAAAA,EAAE,CAACM,gBAAH,CAAoB,MAApB,EAA4BL,aAA5B;IACH;;IAED,SAASM,IAAT,CAAcC,SAAd;IACI1B,EAAAA,KAAK,CAAC/C,GAAN,CAAU,WAAV,EAAuB,YAAvB,EAAwCyE,SAAS,CAAC,CAAD,CAAT,OAAxC;IACA1B,EAAAA,KAAK,CAAC/C,GAAN,CAAU,WAAV,EAAuB,YAAvB,EAAwCyE,SAAS,CAAC,CAAD,CAAT,OAAxC;IACArC,EAAAA,eAAe,CAACnC,KAAhB,GAAwB,KAAGwE,SAAS,CAAC,CAAD,CAApC;IACApC,EAAAA,eAAe,CAACpC,KAAhB,GAAwB,KAAGwE,SAAS,CAAC,CAAD,CAApC;IACH;;IACD,SAASN,QAAT;IACIrB,EAAAA,cAAc,CAAC4B,KAAf,CAAqBC,OAArB,IAAgC5B,KAAK,CAAC6B,KAAN,EAAhC;IACH;;IAEDZ,eAAe,CAAC5B,eAAD,EAAkB,UAAAnC,KAAA;IAC7B8C,EAAAA,KAAK,CAAC/C,GAAN,CAAU,WAAV,EAAuB,YAAvB,EAAwC6E,UAAU,CAAC5E,KAAD,CAAV,OAAxC;IACH,CAFc,CAAf;IAGA+D,eAAe,CAAC3B,eAAD,EAAkB,UAAApC,KAAA;IAC7B8C,EAAAA,KAAK,CAAC/C,GAAN,CAAU,WAAV,EAAuB,YAAvB,EAAwC6E,UAAU,CAAC5E,KAAD,CAAV,OAAxC;IACH,CAFc,CAAf;IAGA+D,eAAe,CAAC1B,eAAD,EAAkB,UAAArC,KAAA;IAC7B8C,EAAAA,KAAK,CAAC/C,GAAN,CAAU,OAAV,EAAsB6E,UAAU,CAAC5E,KAAD,CAAV,OAAtB;IACH,CAFc,CAAf;IAGA+D,eAAe,CAACzB,eAAD,EAAkB,UAAAtC,KAAA;IAC7B8C,EAAAA,KAAK,CAAC/C,GAAN,CAAU,QAAV,EAAuB6E,UAAU,CAAC5E,KAAD,CAAV,OAAvB;IACH,CAFc,CAAf;IAGA+D,eAAe,CAACxB,eAAD,EAAkB,UAAAvC,KAAA;IAC7B8C,EAAAA,KAAK,CAAC/C,GAAN,CAAU,WAAV,EAAuB,QAAvB,EAAoC6E,UAAU,CAAC5E,KAAD,CAAV,QAApC;IACH,CAFc,CAAf;IAIAmC,eAAe,CAACnC,KAAhB,GAAwB,KAAG4E,UAAU,CAAC9B,KAAK,CAAChD,GAAN,CAAU,WAAV,EAAuB,YAAvB,CAAD,CAArC;IACAsC,eAAe,CAACpC,KAAhB,GAAwB,KAAG4E,UAAU,CAAC9B,KAAK,CAAChD,GAAN,CAAU,WAAV,EAAuB,YAAvB,CAAD,CAArC;IACAoE,QAAQ;IAER,IAAIW,YAAY,GAAG,KAAnB;IAEA,IAAMV,QAAQ,GAAG,IAAI/G,UAAJ,CAAaqE,aAAb,EAA4B;IACzCjD,EAAAA,MAAM,EAAEqE,cADiC;IAEzCvC,EAAAA,SAAS,EAAE,IAF8B;IAGzCI,EAAAA,SAAS,EAAE,IAH8B;IAIzCE,EAAAA,SAAS,EAAE,IAJ8B;IAKzCG,EAAAA,SAAS,EAAE,IAL8B;IAMzCD,EAAAA,SAAS,EAAE,IAN8B;IAOzCgE,EAAAA,UAAU,EAAE,IAP6B;IAQzCC,EAAAA,aAAa,EAAE,EAR0B;IASzCC,EAAAA,cAAc,EAAE,CATyB;IAUzCC,EAAAA,cAAc,EAAE,CAVyB;IAWzCC,EAAAA,SAAS,EAAE,KAX8B;IAYzCC,EAAAA,MAAM,EAAE,KAZiC;IAazCC,EAAAA,MAAM,EAAE;IACJpC,IAAAA,IAAI,EAAE,EADF;IAEJC,IAAAA,GAAG,EAAE;IAFD;IAbiC,CAA5B,EAiBdoC,EAjBc,CAiBX,WAjBW,EAiBE,UAACpF,EAAD;UAAGF;IAClBA,EAAAA,GAAG,CAAC,CACA6E,UAAU,CAAC9B,KAAK,CAAChD,GAAN,CAAU,WAAV,EAAuB,YAAvB,CAAD,CADV,EAEA8E,UAAU,CAAC9B,KAAK,CAAChD,GAAN,CAAU,WAAV,EAAuB,YAAvB,CAAD,CAFV,CAAD,CAAH;IAIH,CAtBgB,EAsBduF,EAtBc,CAsBX,MAtBW,EAsBH,UAACpF,EAAD;UAAGqF;IACbf,EAAAA,IAAI,CAACe,eAAD,CAAJ;IACH,CAxBgB,EAwBdD,EAxBc,CAwBX,aAxBW,EAwBI,UAACpF,EAAD;UAAGF;IACpBA,EAAAA,GAAG,CAAC6E,UAAU,CAAC9B,KAAK,CAAChD,GAAN,CAAU,WAAV,EAAuB,QAAvB,CAAD,CAAX,CAAH;IACH,CA1BgB,EA0BduF,EA1Bc,CA0BX,QA1BW,EA0BD,UAACpF,EAAD;UAAGsF;UAAcxG;UAASC;UAASwG;IAC/C1C,EAAAA,KAAK,CAAC/C,GAAN,CAAU,WAAV,EAAuB,QAAvB,EAAoCwF,YAAY,QAAhD;IACAhD,EAAAA,eAAe,CAACvC,KAAhB,GAA2BuF,YAAY,WAAvC;IACA,GAACC,OAAD,IAAYC,QAAQ,CAAC1G,OAAD,EAAUC,OAAV,EAAsBuG,YAAY,WAAlC,CAApB;IACH,CA9BgB,EA8BdF,EA9Bc,CA8BX,aA9BW,EA8BI,UAACpF,EAAD;UAAGyF;UAAW5G;IAC/B4G,EAAAA,SAAS,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,CAAT;IACA5G,EAAAA,SAAS,IAAIA,SAAS,CAACiB,GAAV,CAAc,CACvB6E,UAAU,CAAC9B,KAAK,CAAChD,GAAN,CAAU,WAAV,EAAuB,YAAvB,CAAD,CADa,EAEvB8E,UAAU,CAAC9B,KAAK,CAAChD,GAAN,CAAU,WAAV,EAAuB,YAAvB,CAAD,CAFa,CAAd,CAAb;IAKH,CArCgB,EAqCduF,EArCc,CAqCX,QArCW,EAqCD,UAACpF,EAAD;UAAGiD;UAAOC;UAAQwC;UAAM5G;UAASC;UAAUwG;IACvD1C,EAAAA,KAAK,CAAC/C,GAAN,CAAU,OAAV,EAAsBmD,KAAK,OAA3B;IACAJ,EAAAA,KAAK,CAAC/C,GAAN,CAAU,QAAV,EAAuBoD,MAAM,OAA7B;IAEAoB,EAAAA,IAAI,CAACoB,IAAI,CAACL,eAAN,CAAJ;IACAjD,EAAAA,eAAe,CAACrC,KAAhB,GAAwB,KAAGkD,KAA3B;IACAZ,EAAAA,eAAe,CAACtC,KAAhB,GAAwB,KAAGmD,MAA3B;IACA,GAACqC,OAAD,IAAYC,QAAQ,CAAC1G,OAAD,EAAUC,OAAV,EAAsBkE,KAAK,QAAL,GAAWC,MAAjC,CAApB;IACH,CA7CgB,EA6CdkC,EA7Cc,CA6CX,YA7CW,EA6CG;IAChBR,EAAAA,YAAY,GAAG,IAAf;IACH,CA/CgB,EA+CdQ,EA/Cc,CA+CX,OA/CW,EA+CF,UAACpF,EAAD;UAAGlB;UAASC;IACvB4G,EAAAA,WAAW,CAAC7G,OAAD,EAAUC,OAAV,CAAX;IACH,CAjDgB,EAiDdqG,EAjDc,CAiDX,QAjDW,EAiDD;IACZ,MAAIR,YAAJ,EAAkB;IACdlD,IAAAA,YAAY,CAACgB,SAAb,GACM,QAAMiC,UAAU,CAAC9B,KAAK,CAAChD,GAAN,CAAU,OAAV,CAAD,CAAhB,UAAA,IACA,QAAM8E,UAAU,CAAC9B,KAAK,CAAChD,GAAN,CAAU,QAAV,CAAD,CAAhB,UADA,KAEA,QAAM8E,UAAU,CAAC9B,KAAK,CAAChD,GAAN,CAAU,WAAV,EAAuB,QAAvB,CAAD,CAAhB,WAFA,CADN;IAIH;;;IAEDoE,EAAAA,QAAQ;IACX,CA1DgB,EA0DdmB,EA1Dc,CA0DX,WA1DW,EA0DE;IACfR,EAAAA,YAAY,GAAG,KAAf;IACAgB,EAAAA,SAAS;IACZ,CA7DgB,CAAjB;;IA8DA,SAASD,WAAT,CAAqB7G,OAArB,EAAsCC,OAAtC;IACI2C,EAAAA,YAAY,CAAC8C,KAAb,CAAmBC,OAAnB,GACM,0CAAwC3F,OAAxC,SAAA,IAAsDC,OAAO,GAAG,EAAhE,kCADN;IAEH;;IACD,SAASyG,QAAT,CAAkB1G,OAAlB,EAAmCC,OAAnC,EAAoD8G,IAApD;IACIF,EAAAA,WAAW,CAAC7G,OAAD,EAAUC,OAAV,CAAX;IACA2C,EAAAA,YAAY,CAACgB,SAAb,GAAyBmD,IAAzB;IACH;;IACD,SAASD,SAAT;IACIlE,EAAAA,YAAY,CAAC8C,KAAb,CAAmBsB,OAAnB,GAA6B,MAA7B;IACH;;IACD,SAASC,IAAT,CAAcC,KAAd,EAAqBC,SAArB;IACI,MAAIC,OAAO,GAAGD,SAAd;IACA,MAAIE,QAAQ,GAAGC,QAAf;IAEAJ,EAAAA,KAAK,CAACjI,OAAN,CAAc,UAAAsI,GAAA;IACV,QAAMC,IAAI,GAAG9C,IAAI,CAAC+C,GAAL,CAASF,GAAG,GAAGJ,SAAf,CAAb;;IACA,QAAIK,IAAI,GAAG,EAAX,EAAe;IACX;IACH;;IACD,QAAIH,QAAQ,GAAGG,IAAf,EAAqB;IACjBH,MAAAA,QAAQ,GAAGG,IAAX;IACAJ,MAAAA,OAAO,GAAGG,GAAV;IACH;IACJ,GATD;IAWA,SAAOH,OAAP;IACH;;IACD,SAASM,kBAAT,CAA4BxG,EAA5B;UAA8ByG;UAAO3H;UAASC;IAC1C,MAAM2H,IAAI,GAAG9D,cAAc,CAAC+D,qBAAf,EAAb;IACA,MAAMC,IAAI,GAAGH,KAAK,CAACG,IAAnB;IACA,MAAMC,SAAS,GAAGJ,KAAK,CAACI,SAAxB;IAEAJ,EAAAA,KAAK,CAACK,aAAN,GAAsB,CAACJ,IAAI,CAAC3D,IAAN,EAAY2D,IAAI,CAAC3D,IAAL,GAAY2D,IAAI,CAACzD,KAA7B,CAAtB;IACAwD,EAAAA,KAAK,CAACM,eAAN,GAAwB,CAACL,IAAI,CAAC1D,GAAN,EAAW0D,IAAI,CAAC1D,GAAL,GAAW0D,IAAI,CAACxD,MAA3B,CAAxB;IACAuD,EAAAA,KAAK,CAACO,YAAN,GAAqBJ,IAAI,KAAK,YAA9B;IACAH,EAAAA,KAAK,CAACQ,MAAN,GAAeR,KAAK,CAACO,YAAN,GAAqBrF,eAAe,CAACuF,YAAhB,GAA+BxJ,QAAQ,CAACyJ,eAAT,CAAyBC,SAA7E,GAAyF,CAAxG;IACA9F,EAAAA,QAAQ,CAACuF,SAAD,EAAY,UAAZ,CAAR;IAEAQ,EAAAA,aAAa,CAAC;IAAEZ,IAAAA,KAAK,OAAP;IAAS3H,IAAAA,OAAO,SAAhB;IAAkBC,IAAAA,OAAO;IAAzB,GAAD,CAAb;IACH;;IAED,SAASsI,aAAT,CAAuBrH,EAAvB;UAAyBlB;UAASC;UAAS0H;IAC/B,MAAAI,2BAAA;IAAA,MAAWG,iCAAX;IAAA,MAAyBC,qBAAzB;IACR,MAAMzC,KAAK,GAAGqC,SAAS,CAACrC,KAAxB;;IAEA,MAAIwC,YAAJ,EAAkB;IACd,QAAMd,OAAO,GAAGH,IAAI,CAACU,KAAK,CAACM,eAAP,EAAwBhI,OAAxB,CAAJ,GAAuCkI,MAAvD;IAEAzC,IAAAA,KAAK,CAACxB,GAAN,GAAekD,OAAO,OAAtB;IAEA,WAAOA,OAAP;IACH,GAND,MAMO;IACH,QAAMA,OAAO,GAAGH,IAAI,CAACU,KAAK,CAACK,aAAP,EAAsBhI,OAAtB,CAAJ,GAAqCmI,MAArD;IAEAzC,IAAAA,KAAK,CAACzB,IAAN,GAAgBmD,OAAO,OAAvB;IAEA,WAAOA,OAAO,GAAGe,MAAjB;IACH;IACJ;;IAED,SAASK,gBAAT,CAA0BtH,EAA1B;UAA4ByG;UAAO3H;UAASC;IACxC,MAAMgF,EAAE,GAAG0C,KAAK,CAACI,SAAjB;IACA,MAAMU,SAAS,GAAGF,aAAa,CAAC;IAAEZ,IAAAA,KAAK,OAAP;IAAS3H,IAAAA,OAAO,SAAhB;IAAkBC,IAAAA,OAAO;IAAzB,GAAD,CAA/B;;IAEA,MAAIwI,SAAS,GAAG,EAAhB,EAAoB;IAChB1F,IAAAA,iBAAiB,CAAC2F,WAAlB,CAA8BzD,EAA9B;IACA;IACH;;IACDA,EAAAA,EAAE,CAAC0D,YAAH,CAAgB,eAAhB,EAAiCF,SAAjC;IAEAG,EAAAA,WAAW,CAAC3D,EAAD,EAAK,UAAL,CAAX;IACA4D,EAAAA,iBAAiB;IACpB;;IACD,SAASA,iBAAT;IACI,MAAMC,OAAO,GAAGvE,MAAM,CAACC,UAAP,GAAoB,CAApB,GAAwB,EAAxC;IACA,MAAMuE,OAAO,GAAGxE,MAAM,CAACK,WAAP,GAAqB,CAArC;IAEA,MAAMoE,oBAAoB,GAAG,CAACD,OAAD,CAA7B;IACA,MAAME,kBAAkB,GAAG,CAACH,OAAD,CAA3B;IACA,KAAGI,KAAH,CAASC,IAAT,CAAcpG,iBAAiB,CAACqG,QAAhC,EAA0CnK,OAA1C,CAAkD,UAAA8I,SAAA;IAC9C,QAAMD,IAAI,GAAGC,SAAS,CAACsB,YAAV,CAAuB,WAAvB,CAAb;IACA,QAAM9B,GAAG,GAAG1B,UAAU,CAACkC,SAAS,CAACsB,YAAV,CAAuB,eAAvB,CAAD,CAAtB;IACA,KAACvB,IAAI,KAAK,YAAT,GAAwBkB,oBAAxB,GAA+CC,kBAAhD,EAAoEtF,IAApE,CAAyE4D,GAAzE;IACH,GAJD;IAKAnC,EAAAA,QAAQ,CAAC6D,kBAAT,GAA8BA,kBAA9B;IACA7D,EAAAA,QAAQ,CAAC4D,oBAAT,GAAgCA,oBAAhC;IACH;;IACD,IAAIM,OAAJ,CAAYvG,iBAAZ,EAA+B;IAC3BhE,EAAAA,SAAS,EAAEH,QAAQ,CAAC6D,IADO;IAE3B8G,EAAAA,SAAS,EAAE,UAACrI,EAAD;YAAGsI;YAAY7B;YAAO3H;YAASC;IACtC,QAAM8H,SAAS,GAAGyB,UAAU,CAAC/J,MAA7B;;IAEA,QAAIgK,QAAQ,CAAC1B,SAAD,EAAY,YAAZ,CAAZ,EAAuC;IACnCJ,MAAAA,KAAK,CAACG,IAAN,GAAa,YAAb;IACH,KAFD,MAEO,IAAI2B,QAAQ,CAAC1B,SAAD,EAAY,UAAZ,CAAZ,EAAqC;IACxCJ,MAAAA,KAAK,CAACG,IAAN,GAAa,UAAb;IACH,KAFM,MAEA;IACH,aAAO,KAAP;IACH;;IACDH,IAAAA,KAAK,CAACI,SAAN,GAAkBA,SAAlB;IAEAL,IAAAA,kBAAkB,CAAC;IAAEC,MAAAA,KAAK,OAAP;IAAS3H,MAAAA,OAAO,SAAhB;IAAkBC,MAAAA,OAAO;IAAzB,KAAD,CAAlB;IACAuJ,IAAAA,UAAU,CAACE,eAAX;IACAF,IAAAA,UAAU,CAACG,cAAX;IACH,GAjB0B;IAkB3B/C,EAAAA,IAAI,EAAE2B,aAlBqB;IAmB3BqB,EAAAA,OAAO,EAAEpB;IAnBkB,CAA/B;IAsBA,IAAIc,OAAJ,CAAYxG,aAAZ,EAA2B;IACvB/D,EAAAA,SAAS,EAAEH,QAAQ,CAAC6D,IADG;IAEvB8G,EAAAA,SAAS,EAAE,UAACrI,EAAD;YAAGsI;YAAY7B;YAAO3H;YAASC;IACtC,QAAM4J,KAAK,GAAGL,UAAU,CAAC/J,MAAzB;;IAEA,QAAIoK,KAAK,KAAK7G,sBAAd,EAAsC;IAClC2E,MAAAA,KAAK,CAACG,IAAN,GAAa,YAAb;IACH,KAFD,MAEO,IAAI+B,KAAK,KAAK5G,oBAAd,EAAoC;IACvC0E,MAAAA,KAAK,CAACG,IAAN,GAAa,UAAb;IACH,KAFM,MAEA;IACH,aAAO,KAAP;IACH;;IACD,QAAM7C,EAAE,GAAGrG,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;IACA,QAAMiJ,IAAI,GAAGH,KAAK,CAACG,IAAnB;IAEA7C,IAAAA,EAAE,CAAC6E,SAAH,GAAe,eAAahC,IAA5B;IACA7C,IAAAA,EAAE,CAAC0D,YAAH,CAAgB,WAAhB,EAA6Bb,IAA7B;IAEAH,IAAAA,KAAK,CAACI,SAAN,GAAkB9C,EAAlB;IAEAyC,IAAAA,kBAAkB,CAAC;IAAEC,MAAAA,KAAK,OAAP;IAAS3H,MAAAA,OAAO,SAAhB;IAAkBC,MAAAA,OAAO;IAAzB,KAAD,CAAlB;IACA8C,IAAAA,iBAAiB,CAACgH,WAAlB,CAA8B9E,EAA9B;IAEAuE,IAAAA,UAAU,CAACE,eAAX;IACAF,IAAAA,UAAU,CAACG,cAAX;IACH,GAzBsB;IA0BvB/C,EAAAA,IAAI,EAAE2B,aA1BiB;IA2BvBqB,EAAAA,OAAO,EAAEpB;IA3Bc,CAA3B;;IA8BA,SAASwB,WAAT,CAAqBC,QAArB;IACI,MAAIA,QAAJ,EAAc;IACV7E,IAAAA,QAAQ,CAACc,cAAT,GAA0B,EAA1B;IACAd,IAAAA,QAAQ,CAACe,SAAT,GAAqB,IAArB;IACH,GAHD,MAGO;IACHf,IAAAA,QAAQ,CAACc,cAAT,GAA0B,CAA1B;IACAd,IAAAA,QAAQ,CAACe,SAAT,GAAqB,KAArB;IACH;IACJ;;AACDd,iBAAY,CAAC6E,MAAb,CAAoB5D,EAApB,CAAuB,SAAvB,EAAkC,UAACpF,EAAD;UAAG+I;IACjCD,EAAAA,WAAW,CAACC,QAAD,CAAX;IACH,CAFD,EAEG3D,EAFH,CAEM,OAFN,EAEe,UAACpF,EAAD;UAAG+I;IACdD,EAAAA,WAAW,CAACC,QAAD,CAAX;IACH,CAJD;IAMA1F,MAAM,CAACgB,gBAAP,CAAwB,QAAxB,EAAkC;IAC9BsD,EAAAA,iBAAiB;IACjBzD,EAAAA,QAAQ,CAACxF,UAAT;IACH,CAHD;IAKAhB,QAAQ,CAAC6D,IAAT,CAAc8C,gBAAd,CAA+B,cAA/B,EAA+C,UAAAnG,CAAA;IAC3CA,EAAAA,CAAC,CAACuK,cAAF;IACH,CAFD;IAGAd,iBAAiB;;ICnTjB,IAAMsB,gBAAgB,GAAgBvL,QAAQ,CAAC+D,aAAT,CAAuB,YAAvB,CAAtC;IACA,IAAMpB,SAAS,GAAG,IAAIlD,UAAJ,CAAa8L,gBAAgB,CAAC5L,aAA9B,EAA6C;IAC3DkB,EAAAA,MAAM,EAAE0K,gBADmD;IAE3D/D,EAAAA,MAAM,EAAE,KAFmD;IAG3D7E,EAAAA,SAAS,EAAE;IAHgD,CAA7C,EAIf+E,EAJe,CAIZ,MAJY,EAIJ,UAACpF,EAAD;UAAGzB;UAAQ4E;IACrB5E,EAAAA,MAAM,CAACiG,KAAP,CAAarB,SAAb,GAAyBA,SAAzB;IACH,CANiB,CAAlB;IAQA,IAAM+F,gBAAgB,GAAgBxL,QAAQ,CAAC+D,aAAT,CAAuB,YAAvB,CAAtC;IACA,IAAMhB,SAAS,GAAG,IAAItD,UAAJ,CAAa+L,gBAAgB,CAAC7L,aAA9B,EAA6C;IAC3DkB,EAAAA,MAAM,EAAE2K,gBADmD;IAE3DhE,EAAAA,MAAM,EAAE,KAFmD;IAG3DzE,EAAAA,SAAS,EAAE;IAHgD,CAA7C,EAIf2E,EAJe,CAIZ,QAJY,EAIF,UAACpF,EAAD;UAAGzB;UAAQ0E;UAAOC;IAC9B3E,EAAAA,MAAM,CAACiG,KAAP,CAAavB,KAAb,GAAwBA,KAAK,OAA7B;IACA1E,EAAAA,MAAM,CAACiG,KAAP,CAAatB,MAAb,GAAyBA,MAAM,OAA/B;IACH,CAPiB,CAAlB;IASA,IAAMiG,eAAe,GAAgBzL,QAAQ,CAAC+D,aAAT,CAAuB,WAAvB,CAArC;IACA,IAAMf,QAAQ,GAAG,IAAIvD,UAAJ,CAAagM,eAAe,CAAC9L,aAA7B,EAA4C;IACzDkB,EAAAA,MAAM,EAAE4K,eADiD;IAEzDjE,EAAAA,MAAM,EAAE,KAFiD;IAGzDxE,EAAAA,QAAQ,EAAE;IAH+C,CAA5C,EAId0E,EAJc,CAIX,OAJW,EAIF,UAACpF,EAAD;UAAGzB;UAAQ4E;IACtB5E,EAAAA,MAAM,CAACiG,KAAP,CAAarB,SAAb,GAAyBA,SAAzB;IACH,CANgB,CAAjB;IAQA,IAAMiG,gBAAgB,GAAgB1L,QAAQ,CAAC+D,aAAT,CAAuB,YAAvB,CAAtC;IACA,IAAMd,SAAS,GAAG,IAAIxD,UAAJ,CAAaiM,gBAAgB,CAAC/L,aAA9B,EAA6C;IAC3DkB,EAAAA,MAAM,EAAE6K,gBADmD;IAE3DlE,EAAAA,MAAM,EAAE,KAFmD;IAG3DvE,EAAAA,SAAS,EAAE;IAHgD,CAA7C,EAIfyE,EAJe,CAIZ,QAJY,EAIF,UAACpF,EAAD;UAAGzB;UAAQ4E;IACvB5E,EAAAA,MAAM,CAACiG,KAAP,CAAarB,SAAb,GAAyBA,SAAzB;IACH,CANiB,CAAlB;IAOA,IAAMkG,eAAe,GAAgB3L,QAAQ,CAAC+D,aAAT,CAAuB,WAAvB,CAArC;IACA,IAAMb,QAAQ,GAAG,IAAIzD,UAAJ,CAAakM,eAAe,CAAChM,aAA7B,EAA4C;IACzDkB,EAAAA,MAAM,EAAE8K,eADiD;IAEzDzI,EAAAA,QAAQ,EAAE,IAF+C;IAGzDsE,EAAAA,MAAM,EAAE;IAHiD,CAA5C,EAIdE,EAJc,CAIX,MAJW,EAIH,UAACpF,EAAD;UAAGzB;UAAQ4E;IACrB5E,EAAAA,MAAM,CAACiG,KAAP,CAAarB,SAAb,GAAyBA,SAAzB;IACH,CANgB,CAAjB;IAQA,IAAMmG,gBAAgB,GAAgB5L,QAAQ,CAAC+D,aAAT,CAAuB,YAAvB,CAAtC;IACA,IAAMX,SAAS,GAAG,IAAI3D,UAAJ,CAAamM,gBAAgB,CAACjM,aAA9B,EAA6C;IAC3DkB,EAAAA,MAAM,EAAE+K,gBADmD;IAE3DjJ,EAAAA,SAAS,EAAE,IAFgD;IAG3DS,EAAAA,SAAS,EAAE,IAHgD;IAI3D+D,EAAAA,UAAU,EAAE,IAJ+C;IAK3DK,EAAAA,MAAM,EAAE,KALmD;IAM3D6C,EAAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CANuC;IAO3DD,EAAAA,oBAAoB,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT;IAPqC,CAA7C,EAQf1C,EARe,CAQZ,MARY,EAQJ,UAACpF,EAAD;UAAGzB;UAAQwE;UAAMC;IAC3BzE,EAAAA,MAAM,CAACiG,KAAP,CAAazB,IAAb,GAAuBA,IAAI,OAA3B;IACAxE,EAAAA,MAAM,CAACiG,KAAP,CAAaxB,GAAb,GAAsBA,GAAG,OAAzB;IACH,CAXiB,CAAlB;IAaA,IAAMuG,gBAAgB,GAAgB7L,QAAQ,CAAC+D,aAAT,CAAuB,YAAvB,CAAtC;IACA,IAAM+H,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAd;IACA,IAAI7F,QAAM,GAAG,CAAb;IACA,IAAM9C,SAAS,GAAG,IAAI1D,UAAJ,CAAaoM,gBAAgB,CAAClM,aAA9B,EAA6C;IAC3DkB,EAAAA,MAAM,EAAEgL,gBADmD;IAE3D1I,EAAAA,SAAS,EAAE,CAAC,WAAD,EAAc,UAAd,CAFgD;IAG3DqE,EAAAA,MAAM,EAAE;IAHmD,CAA7C,EAIfE,EAJe,CAIZ,QAJY,EAIF,UAACpF,EAAD;UAAGyJ;IACf9F,EAAAA,QAAM,IAAI8F,WAAV;IAEAF,EAAAA,gBAAgB,CAAC/E,KAAjB,CAAuBrB,SAAvB,GAAmC,WAASqG,KAAK,CAAC7G,IAAN,CAAW,IAAX,CAAT,cAAA,GAAqCgB,QAArC,SAAnC;IACH,CARiB,EAQfyB,EARe,CAQZ,OARY,EAQH,UAACpF,EAAD;UAAG0J;IACdF,EAAAA,KAAK,CAAC,CAAD,CAAL,IAAYE,KAAK,CAAC,CAAD,CAAjB;IACAF,EAAAA,KAAK,CAAC,CAAD,CAAL,IAAYE,KAAK,CAAC,CAAD,CAAjB;IAEAH,EAAAA,gBAAgB,CAAC/E,KAAjB,CAAuBrB,SAAvB,GAAmC,WAASqG,KAAK,CAAC7G,IAAN,CAAW,IAAX,CAAT,cAAA,GAAqCgB,QAArC,SAAnC;IACH,CAbiB,CAAlB;IAeA,IAAMgG,gBAAgB,GAAgBjM,QAAQ,CAAC+D,aAAT,CAAuB,YAAvB,CAAtC;IACA,IAAMuE,KAAK,GAAG,CACV,CAAC,CAAD,EAAI,CAAJ,CADU,EAEV,CAAC,CAAD,EAAI,CAAJ,CAFU,EAGV,CAAC,CAAD,EAAI,CAAJ,CAHU,CAAd;IAMA,IAAMjF,SAAS,GAAG,IAAI5D,UAAJ,CAAawM,gBAAgB,CAACtM,aAA9B,EAA6C;IAC3DkB,EAAAA,MAAM,EAAE,GAAGyJ,KAAH,CAASC,IAAT,CAAc0B,gBAAgB,CAACC,gBAAjB,CAAkC,MAAlC,CAAd,CADmD;IAE3D1E,EAAAA,MAAM,EAAE,KAFmD;IAG3D7E,EAAAA,SAAS,EAAE;IAHgD,CAA7C,EAIf+E,EAJe,CAIZ,WAJY,EAIC,UAACpF,EAAD;UAAGlC;IAClBA,EAAAA,MAAM,CAACC,OAAP,CAAe,UAACiC,EAAD,EAA0BwC,CAA1B;YAAGjE;YAAQkL;IACtBzD,IAAAA,KAAK,CAACxD,CAAD,CAAL,CAAS,CAAT,KAAeiH,WAAW,CAAC,CAAD,CAA1B;IACAzD,IAAAA,KAAK,CAACxD,CAAD,CAAL,CAAS,CAAT,KAAeiH,WAAW,CAAC,CAAD,CAA1B;IAEAlL,IAAAA,MAAM,CAACiG,KAAP,CAAarB,SAAb,GAAyB,eAAa6C,KAAK,CAACxD,CAAD,CAAL,CAAS,CAAT,CAAb,SAAA,GAA+BwD,KAAK,CAACxD,CAAD,CAAL,CAAS,CAAT,CAA/B,QAAzB;IACH,GALD;IAMH,CAXiB,CAAlB;IAaAa,MAAM,CAACgB,gBAAP,CAAwB,QAAxB,EAAkC;IAC9B;IACAhE,EAAAA,SAAS,CAAC3B,UAAV;IACA+B,EAAAA,SAAS,CAAC/B,UAAV;IACAgC,EAAAA,QAAQ,CAAChC,UAAT;IACAiC,EAAAA,SAAS,CAACjC,UAAV;IACAkC,EAAAA,QAAQ,CAAClC,UAAT;IACAmC,EAAAA,SAAS,CAACnC,UAAV;IACAqC,EAAAA,SAAS,CAACrC,UAAV;IACH,CATD;IAWAhB,QAAQ,CAAC2G,gBAAT,CAA0B,kBAA1B,EAA8C;IAC1C3G,EAAAA,QAAQ,CAACkM,gBAAT,CAA0B,KAA1B,EAAiC7L,OAAjC,CAAyC,UAAC8L,GAAD;IACrC,QAAMC,KAAK,GAAGD,GAAG,CAAC1B,YAAJ,CAAiB,YAAjB,CAAd;IACA,QAAM4B,KAAK,GAAGF,GAAG,CAAC1B,YAAJ,CAAiB,YAAjB,CAAd;IACA,QAAM6B,KAAK,GAAGH,GAAG,CAACpI,aAAJ,CAAkB,MAAlB,CAAd;IAEA,QAAIwI,IAAI,GAAG7J,KAAK,CAAC0J,KAAD,CAAL,CAAaC,KAAK,KAAK,QAAV,GAAqB,OAArB,GAA+BA,KAA5C,EAAmDG,IAAnD,EAAX;;IAEA,QAAIH,KAAK,KAAK,QAAd,EAAwB;IACpBE,MAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,QAAb,EAAuB,QAAvB,CAAP;IACH;;IACDH,IAAAA,KAAK,CAACI,SAAN,GAAkBH,IAAlB;IACAI,IAAAA,IAAI,CAACC,cAAL,CAAoBN,KAApB;IACH,GAZD;IAaH,CAdD;IAgBA,IAAMO,SAAS,GAAG,EAAlB;IAEA,GAAGvC,KAAH,CAASC,IAAT,CAAcvK,QAAQ,CAACkM,gBAAT,CAA0B,YAA1B,CAAd,EAAuD7L,OAAvD,CAA+D,UAAAyM,UAAA;IAC3D,MAAMV,KAAK,GAAGU,UAAU,CAACrC,YAAX,CAAwB,YAAxB,CAAd;IACA,MAAMsC,GAAG,GAAGD,UAAU,CAACrC,YAAX,CAAwB,UAAxB,CAAZ;IACA,MAAMuC,YAAY,GAAGhN,QAAQ,CAAC+D,aAAT,CAAuB,mBAAgBqI,KAAhB,sBAAA,GAAuCW,GAAvC,QAAvB,CAArB;IAEA,GAACF,SAAS,CAACT,KAAD,CAAV,KAAsBS,SAAS,CAACT,KAAD,CAAT,GAAmB,EAAzC;IACAS,EAAAA,SAAS,CAACT,KAAD,CAAT,CAAiBrH,IAAjB,CAAsB,CAAC+H,UAAD,EAAaE,YAAb,CAAtB;IAEAF,EAAAA,UAAU,CAACnG,gBAAX,CAA4B,OAA5B,EAAqC;IACjCkG,IAAAA,SAAS,CAACT,KAAD,CAAT,CAAiB/L,OAAjB,CAAyB,UAACiC,EAAD;cAAE2K;cAAiBC;;IACxC,UAAIJ,UAAU,KAAKG,eAAnB,EAAoC;IAChC;IACH;;IACDA,MAAAA,eAAe,CAACE,SAAhB,CAA0BC,MAA1B,CAAiC,UAAjC;IACAF,MAAAA,iBAAiB,CAACC,SAAlB,CAA4BC,MAA5B,CAAmC,UAAnC;IACH,KAND;IAOAN,IAAAA,UAAU,CAACK,SAAX,CAAqBE,GAArB,CAAyB,UAAzB;IACAL,IAAAA,YAAY,CAACG,SAAb,CAAuBE,GAAvB,CAA2B,UAA3B;IACH,GAVD;IAWH,CAnBD;;;;"}