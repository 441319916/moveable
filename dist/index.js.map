{"version":3,"file":"index.js","sources":["../../src/InnerMoveable.tsx","../../src/consts.ts","../../src/Moveable.tsx","../src/consts.ts","../src/index.ts"],"sourcesContent":["import { Component, h } from \"preact\";\nimport Moveable, { MoveableProps, MoveableInterface } from \"preact-moveable\";\nimport { ref } from \"framework-utils\";\n\nexport default class InnerMoveable extends Component<MoveableProps> {\n    public state: MoveableProps = {};\n    public preactMoveable: MoveableInterface;\n    constructor(props: MoveableProps) {\n        super(props);\n        this.state = this.props;\n    }\n    public render() {\n        return <Moveable ref={ref(this, \"preactMoveable\")} {...this.state} />;\n    }\n}\n","import { MoveableEvents } from \"./types\";\n\nexport const PROPERTIES = [\n    \"draggable\", \"resizable\", \"scalable\", \"rotatable\",\n    \"warpable\", \"pinchable\", \"snappable\", \"origin\", \"target\", \"edge\",\n    \"throttleDrag\", \"throttleResize\",\n    \"throttleScale\", \"throttleRotate\", \"keepRatio\",\n    \"dragArea\",\n    \"pinchThreshold\",\n    \"snapCenter\", \"snapThreshold\",\n    \"horizontalGuidelines\", \"verticalGuidelines\", \"elementGuidelines\",\n    \"bounds\",\n];\nexport const EVENTS: Array<keyof MoveableEvents> = [\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"resizeStart\",\n    \"resize\",\n    \"resizeEnd\",\n    \"scaleStart\",\n    \"scale\",\n    \"scaleEnd\",\n    \"rotateStart\",\n    \"rotate\",\n    \"rotateEnd\",\n    \"warpStart\",\n    \"warp\",\n    \"warpEnd\",\n    \"pinchStart\",\n    \"pinch\",\n    \"pinchEnd\",\n\n    \"dragGroupStart\",\n    \"dragGroup\",\n    \"dragGroupEnd\",\n    \"resizeGroupStart\",\n    \"resizeGroup\",\n    \"resizeGroupEnd\",\n    \"scaleGroupStart\",\n    \"scaleGroup\",\n    \"scaleGroupEnd\",\n    \"rotateGroupStart\",\n    \"rotateGroup\",\n    \"rotateGroupEnd\",\n    \"pinchGroupStart\",\n    \"pinchGroup\",\n    \"pinchGroupEnd\",\n    \"clickGroup\",\n];\n","import EgComponent from \"@egjs/component\";\nimport { ref, Properties } from \"framework-utils\";\nimport { h, render } from \"preact\";\nimport InnerMoveable from \"./InnerMoveable\";\nimport { MoveableOptions, MoveableGetterSetter } from \"./types\";\nimport {\n    OnDragStart, OnDrag, OnResize, OnResizeStart,\n    OnResizeEnd, OnScaleStart, OnScaleEnd, OnRotateStart,\n    OnRotateEnd, OnDragEnd, OnRotate, OnScale,\n    OnWarpStart, OnWarpEnd, OnWarp, OnPinchStart,\n    OnPinch, OnPinchEnd, OnDragGroup, OnDragGroupStart,\n    OnDragGroupEnd, OnResizeGroup, OnResizeGroupStart,\n    OnResizeGroupEnd, OnScaleGroup, OnScaleGroupEnd,\n    OnRotateGroup, OnRotateGroupStart, OnRotateGroupEnd,\n    OnPinchGroup, OnPinchGroupStart, OnPinchGroupEnd, OnScaleGroupStart, OnClickGroup,\n} from \"react-moveable/declaration/types\";\nimport { PROPERTIES, EVENTS } from \"./consts\";\nimport { camelize, isArray } from \"@daybrush/utils\";\n\n/**\n * Moveable is Draggable! Resizable! Scalable! Rotatable!\n * @sort 1\n * @extends eg.Component\n */\n@Properties(PROPERTIES, (prototype, property) => {\n    Object.defineProperty(prototype, property, {\n        get() {\n            return this.getMoveable().props[property];\n        },\n        set(value) {\n            this.innerMoveable.setState({\n                [property]: value,\n            });\n        },\n        enumerable: true,\n        configurable: true,\n    });\n})\nclass Moveable extends EgComponent {\n    private innerMoveable!: InnerMoveable;\n\n    /**\n     *\n     */\n    constructor(parentElement: HTMLElement | SVGElement, options: MoveableOptions = {}) {\n        super();\n        const element = document.createElement(\"div\");\n        const nextOptions = { container: parentElement, ...options };\n\n        const events: any = {};\n\n        EVENTS.forEach(name => {\n            events[camelize(`on ${name}`)] = (e: any) => this.trigger(name, e);\n        });\n\n        render(\n            <InnerMoveable\n                ref={ref(this, \"innerMoveable\")}\n                {...nextOptions}\n                {...events}\n            />,\n            element,\n        );\n        parentElement.appendChild(element.children[0]);\n\n        const target = nextOptions.target!;\n        if (isArray(target) && target.length > 1) {\n            this.updateRect();\n        }\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: HTMLElement | SVGElement) {\n        return this.getMoveable().isMoveableElement(target);\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect() {\n        this.getMoveable().updateRect();\n    }\n    /**\n     * You can move the Moveable through the external `MouseEvent`or `TouchEvent`.\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent): void {\n        this.getMoveable().dragStart(e);\n    }\n\n    /**\n     * Whether the coordinates are inside Moveable\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number): boolean {\n        return this.getMoveable().isInside(clientX, clientY);\n    }\n\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @param - the values of x and y to move moveable.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(): void {\n        this.getMoveable().updateTarget();\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy() {\n        const el = this.getMoveable().base;\n\n        el.remove ? el.remove() : el.parentElement.removeChild(el);\n        this.off();\n        this.getMoveable().destroy();\n        this.innerMoveable = null;\n    }\n    private getMoveable() {\n        return this.innerMoveable.preactMoveable;\n    }\n}\n/**\n * Whether or not the origin controlbox will be visible or not\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Whether or not target can be dragged.\n * @name Moveable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n/**\n * Whether or not target can be resized.\n * @name Moveable#resizable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.resizable = true;\n */\n/**\n * Whether or not target can scaled.\n * @name Moveable#scalable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n/**\n * Whether or not target can be rotated.\n * @name Moveable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * Whether or not target can be warped.\n * @name Moveable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable\n * @name Moveable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.keepRatio = true;\n */\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n/**\n * throttle of x, y when drag.\n * @name Moveable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n/**\n * throttle of width, height when resize.\n * @name Moveable#throttleResize\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleResize = 1;\n */\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * hrottle of angle(degree) when rotate.\n * @name Moveable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable\n * @event dragStart\n * @param {Moveable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable\n * @event drag\n * @param {Moveable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable\n * @event dragEnd\n * @param {Moveable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable\n * @event resizeStart\n * @param {Moveable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable\n * @event resize\n * @param {Moveable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable\n * @event resizeEnd\n * @param {Moveable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable\n * @event scaleStart\n * @param {Moveable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, the scale event is called.\n * @memberof Moveable\n * @event scale\n * @param {Moveable.OnScale} - Parameters for the scale event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the scaleEnd event is called.\n * @memberof Moveable\n * @event scaleEnd\n * @param {Moveable.OnScaleEnd} - Parameters for the scaleEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable\n * @event rotateStart\n * @param {Moveable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When rotating, the rotate event is called.\n * @memberof Moveable\n * @event rotate\n * @param {Moveable.OnRotate} - Parameters for the rotate event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotate\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable\n * @event rotateEnd\n * @param {Moveable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable\n* @event warpStart\n* @param {Moveable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable\n * @event warp\n * @param {Moveable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable\n * @event warpEnd\n * @param {Moveable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable\n * @event pinchStart\n * @param {Moveable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable\n * @event pinch\n * @param {Moveable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable\n * @event pinchEnd\n * @param {Moveable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n /**\n * When the group drag starts, the `dragGroupStart` event is called.\n * @memberof Moveable\n * @event dragGroupStart\n * @param {Moveable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupStart\", ({ targets }) => {\n *     console.log(\"onDragGroupStart\", targets);\n * });\n */\n\n /**\n * When the group drag, the `dragGroup` event is called.\n * @memberof Moveable\n * @event dragGroup\n * @param {Moveable.onDragGroup} - Parameters for the `dragGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroup\", ({ targets, events }) => {\n *     console.log(\"onDragGroup\", targets);\n *     events.forEach(ev => {\n *          // drag event\n *          console.log(\"onDrag left, top\", ev.left, ev.top);\n *          // ev.target!.style.left = `${ev.left}px`;\n *          // ev.target!.style.top = `${ev.top}px`;\n *          console.log(\"onDrag translate\", ev.dist);\n *          ev.target!.style.transform = ev.transform;)\n *     });\n * });\n */\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable\n * @event dragGroupEnd\n * @param {Moveable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n\n /**\n * When the group resize starts, the `resizeGroupStart` event is called.\n * @memberof Moveable\n * @event resizeGroupStart\n * @param {Moveable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupStart\", ({ targets }) => {\n *     console.log(\"onResizeGroupStart\", targets);\n * });\n */\n\n /**\n * When the group resize, the `resizeGroup` event is called.\n * @memberof Moveable\n * @event resizeGroup\n * @param {Moveable.onResizeGroup} - Parameters for the `resizeGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroup\", ({ targets, events }) => {\n *     console.log(\"onResizeGroup\", targets);\n *     events.forEach(ev => {\n *         const offset = [\n *             direction[0] < 0 ? -ev.delta[0] : 0,\n *             direction[1] < 0 ? -ev.delta[1] : 0,\n *         ];\n *         // ev.drag is a drag event that occurs when the group resize.\n *         const left = offset[0] + ev.drag.beforeDist[0];\n *         const top = offset[1] + ev.drag.beforeDist[1];\n *         const width = ev.width;\n *         const top = ev.top;\n *     });\n * });\n */\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable\n * @event resizeGroupEnd\n * @param {Moveable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n\n /**\n * When the group scale starts, the `scaleGroupStart` event is called.\n * @memberof Moveable\n * @event scaleGroupStart\n * @param {Moveable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupStart\", ({ targets }) => {\n *     console.log(\"onScaleGroupStart\", targets);\n * });\n */\n\n /**\n * When the group scale, the `scaleGroup` event is called.\n * @memberof Moveable\n * @event scaleGroup\n * @param {Moveable.OnScaleGroup} - Parameters for the `scaleGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroup\", ({ targets, events }) => {\n *     console.log(\"onScaleGroup\", targets);\n *     events.forEach(ev => {\n *         const target = ev.target;\n *         // ev.drag is a drag event that occurs when the group scale.\n *         const left = ev.drag.beforeDist[0];\n *         const top = ev.drag.beforeDist[1];\n *         const scaleX = ev.scale[0];\n *         const scaleY = ev.scale[1];\n *     });\n * });\n */\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable\n * @event scaleGroupEnd\n * @param {Moveable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable\n * @event rotateGroupStart\n * @param {Moveable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n /**\n * When the group rotate, the `rotateGroup` event is called.\n * @memberof Moveable\n * @event rotateGroup\n * @param {Moveable.OnRotateGroup} - Parameters for the `rotateGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroup\", ({ targets, events }) => {\n *     console.log(\"onRotateGroup\", targets);\n *     events.forEach(ev => {\n *         const target = ev.target;\n *         // ev.drag is a drag event that occurs when the group rotate.\n *         const left = ev.drag.beforeDist[0];\n *         const top = ev.drag.beforeDist[1];\n *         const deg = ev.beforeDist;\n *     });\n * });\n */\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable\n * @event rotateGroupEnd\n * @param {Moveable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable\n * @event pinchGroupStart\n * @param {Moveable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n /**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable\n * @event pinchGroup\n * @param {Moveable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable\n * @event pinchGroupEnd\n * @param {Moveable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n\n /**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ target, hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\ninterface Moveable extends MoveableGetterSetter {\n    on(eventName: \"drag\", handlerToAttach: (event: OnDrag) => any): this;\n    on(eventName: \"dragStart\", handlerToAttach: (event: OnDragStart) => any): this;\n    on(eventName: \"dragEnd\", handlerToAttach: (event: OnDragEnd) => any): this;\n\n    on(eventName: \"resize\", handlerToAttach: (event: OnResize) => any): this;\n    on(eventName: \"resizeStart\", handlerToAttach: (event: OnResizeStart) => any): this;\n    on(eventName: \"resizeEnd\", handlerToAttach: (event: OnResizeEnd) => any): this;\n\n    on(eventName: \"scale\", handlerToAttach: (event: OnScale) => any): this;\n    on(eventName: \"scaleStart\", handlerToAttach: (event: OnScaleStart) => any): this;\n    on(eventName: \"scaleEnd\", handlerToAttach: (event: OnScaleEnd) => any): this;\n\n    on(eventName: \"rotate\", handlerToAttach: (event: OnRotate) => any): this;\n    on(eventName: \"rotateStart\", handlerToAttach: (event: OnRotateStart) => any): this;\n    on(eventName: \"rotateEnd\", handlerToAttach: (event: OnRotateEnd) => any): this;\n\n    on(eventName: \"warp\", handlerToAttach: (event: OnWarp) => any): this;\n    on(eventName: \"warpStart\", handlerToAttach: (event: OnWarpStart) => any): this;\n    on(eventName: \"warpEnd\", handlerToAttach: (event: OnWarpEnd) => any): this;\n\n    on(eventName: \"pinch\", handlerToAttach: (event: OnPinch) => any): this;\n    on(eventName: \"pinchStart\", handlerToAttach: (event: OnPinchStart) => any): this;\n    on(eventName: \"pinchEnd\", handlerToAttach: (event: OnPinchEnd) => any): this;\n\n    on(eventName: \"dragGroup\", handlerToAttach: (event: OnDragGroup) => any): this;\n    on(eventName: \"dragGroupStart\", handlerToAttach: (event: OnDragGroupStart) => any): this;\n    on(eventName: \"dragGroupEnd\", handlerToAttach: (event: OnDragGroupEnd) => any): this;\n\n    on(eventName: \"resizeGroup\", handlerToAttach: (event: OnResizeGroup) => any): this;\n    on(eventName: \"resizeGroupStart\", handlerToAttach: (event: OnResizeGroupStart) => any): this;\n    on(eventName: \"resizeGroupEnd\", handlerToAttach: (event: OnResizeGroupEnd) => any): this;\n\n    on(eventName: \"scaleGroup\", handlerToAttach: (event: OnScaleGroup) => any): this;\n    on(eventName: \"scaleGroupStart\", handlerToAttach: (event: OnScaleGroupStart) => any): this;\n    on(eventName: \"scaleGroupEnd\", handlerToAttach: (event: OnScaleGroupEnd) => any): this;\n\n    on(eventName: \"rotateGroup\", handlerToAttach: (event: OnRotateGroup) => any): this;\n    on(eventName: \"rotateGroupStart\", handlerToAttach: (event: OnRotateGroupStart) => any): this;\n    on(eventName: \"rotateGroupEnd\", handlerToAttach: (event: OnRotateGroupEnd) => any): this;\n\n    on(eventName: \"pinchGroup\", handlerToAttach: (event: OnPinchGroup) => any): this;\n    on(eventName: \"pinchGroupStart\", handlerToAttach: (event: OnPinchGroupStart) => any): this;\n    on(eventName: \"pinchGroupEnd\", handlerToAttach: (event: OnPinchGroupEnd) => any): this;\n\n    on(eventName: \"clickGroup\", handlerToAttach: (event: OnClickGroup) => any): this;\n\n    on(eventName: string, handlerToAttach: (event: { [key: string]: any }) => any): this;\n    on(events: { [key: string]: (event: { [key: string]: any }) => any }): this;\n}\n\nexport default Moveable;\n","export const codes = {\n    draggable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\n/* const translate = [0, 0]; */\nconst draggable = new Moveable(document.body, {\n    target: document.querySelector(\".draggable\"),\n    draggable: true,\n    throttleDrag: 0,\n}).on(\"drag\", ({ target, left, top, beforeDelta }) => {\n    target.style.left = left + \"px\";\n    target.style.top = top + \"px\";\n\n    /* translate[0] += beforeDelta[0]; */\n    /* translate[1] += beforeDelta[1]; */\n    /* target.style.transform\n        = \"translateX(\" + translate[0] + \"px) \"\n        + \"translateY(\" + translate[1] + \"px)\"; */\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\nthis.translate = [0, 0];\nreturn (\n    <Moveable\n        target={document.querySelector(\".draggable\")}\n        draggable={true}\n        throttleDrag={0}\n        onDrag={({ target, left, top, beforeDelta }) => {\n            target.style.left = left + \"px\";\n            target.style.top = top + \"px\";\n\n            /* const translate = this.translate */\n            /* translate[0] += beforeDelta[0]; */\n            /* translate[1] += beforeDelta[1]; */\n            /* target.style.transform\n                = \"translateX(\" + translate[0] + \"px) \"\n                + \"translateY(\" + translate[1] + \"px)\"; */\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [draggable]=\"true\"\n    [throttleDrag]=\"0\"\n    (drag)=\"onDrag($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    translate = [0, 0];\n    onDrag({ target, left, top, beforeDelta }) {\n        target.style.left = left + \"px\";\n        target.style.top = top + \"px\";\n\n        /* const translate = this.translate */\n        /* translate[0] += beforeDelta[0]; */\n        /* translate[1] += beforeDelta[1]; */\n        /* target.style.transform\n            = \"translateX(\" + translate[0] + \"px) \"\n            + \"translateY(\" + translate[1] + \"px)\"; */\n    }\n}\n`,\n    },\n    resizable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\nconst resizable = new Moveable(document.body, {\n    target: document.querySelector(\".resizable\"),\n    resizable: true,\n    throttleResize: 0,\n    keepRatio: true,\n}).on(\"resize\", ({ target, width, height, dist }) => {\n    console.log(width, height, dist);\n    target.style.width = width + \"px\";\n    target.style.height = height + \"px\";\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nreturn (\n    <Moveable\n        target={document.querySelector(\".resizable\")}\n        resizable={true}\n        throttleResize={0}\n        keepRatio={true}\n        onResize={({ target, width, height, dist }) => {\n            console.log(width, height, dist);\n            target.style.width = width + \"px\";\n            target.style.height = height + \"px\";\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [resizable]=\"true\"\n    [throttleResize]=\"0\"\n    [keepRatio]=\"true\"\n    (resize)=\"onResize($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    onResize({ target, width, height, dist }) {\n        console.log(width, height, dist);\n        target.style.width = width + \"px\";\n        target.style.height = height + \"px\";\n    }\n}\n        `,\n    },\n    scalable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\nconst scale = [1, 1];\nconst scalable = new Moveable(document.body, {\n    target: document.querySelector(\".scalable\"),\n    scalable: true,\n    throttleScale: 0,\n    keepRatio: true,\n}).on(\"scale\", ({ target, delta }) => {\n    scale[0] *= delta[0];\n    scale[1] *= delta[1];\n    target.style.transform = \"scale(\" + scale[0] +  \",\" + scale[1] + \")\";\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nthis.scale = [1, 1];\nreturn (\n    <Moveable\n        target={document.querySelector(\".scalable\")}\n        scalable={true}\n        throttleScale={0}\n        keepRatio={true}\n        onScale={({ target, delta }) => {\n            const scale = this.scale;\n            scale[0] *= delta[0];\n            scale[1] *= delta[1];\n            target.style.transform\n                = \"scale(\" + scale[0] +  \",\" + scale[1] + \")\";\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [scalable]=\"true\"\n    [throttleScale]=\"0\"\n    [keepRatio]=\"true\"\n    (scale)=\"onScale($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    scale = [1, 1];\n    onScale({ target, delta }) {\n        const scale = this.scale;\n        scale[0] *= delta[0];\n        scale[1] *= delta[1];\n        target.style.transform\n            = \"scale(\" + scale[0] +  \",\" + scale[1] + \")\";\n    }\n}\n        `,\n    },\n    rotatable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\nlet rotate = 0;\n\nconst rotatable = new Moveable(document.body, {\n    target: document.querySelector(\".rotatable\"),\n    rotatable: true,\n    throttleRotate: 0,\n}).on(\"rotate\", ({ target, beforeDelta, delta }) => {\n    rotate += delta;\n    target.style.transform\n        = \"rotate(\" + rotate +  \"deg)\";\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nthis.rotate = 0;\n\nreturn (\n    <Moveable\n        target={document.querySelector(\".rotatable\")}\n        rotatable={true}\n        throttleRotate={0}\n        onRotate={({ target, beforeDelta, delta }) => {\n            this.rotate += delta;\n            target.style.transform\n                = \"rotate(\" + this.rotate +  \"deg)\";\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [rotatable]=\"true\"\n    [throttleRotate]=\"0\"\n    [keepRatio]=\"true\"\n    (rotate)=\"onRotate($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    rotate = 0;\n    onRotate({ target, delta }) {\n        this.rotate += delta;\n        target.style.transform\n            = \"rotate(\" + this.rotate +  \"deg)\";\n    }\n}\n        `,\n    },\n    warpable: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\nlet matrix = [\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1,\n];\n\nconst warpable = new Moveable(document.body, {\n    target: document.querySelector(\".warpable\"),\n    warpable: true,\n    throttleRotate: 0,\n}).on(\"warp\", ({ target, multiply, delta }) => {\n    matrix = multiply(matrix, delta);\n    target.style.transform\n        = \"matrix3d(\" + matrix.join(\",\") +  \")\";\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nthis.matrix = [\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1,\n];\n\nreturn (\n    <Moveable\n        target={document.querySelector(\".warpable\")}\n        warpable={true}\n        onWarp={({ target, multiply, delta }) => {\n            this.matrix = multiply(this.matrix, delta);\n            target.style.transform\n                = \"matrix3d(\" + matrix.join(\",\") +  \")\";\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [warpable]=\"true\"\n    (warp)=\"onWarp($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    matrix = [\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1,\n    ];\n    onWarp({ target, dist }) {\n        this.matrix = multiply(this.matrix, delta);\n        target.style.transform\n            = \"matrix3d(\" + matrix.join(\",\") +  \")\";\n    }\n}\n        `,\n    },\n    pinchable: {\n        vanilla: `\nimport Moveable from \"moveable\";\nconst scale = [1, 1];\nlet rotate = 0;\n\nconst pinchable = new Moveable(document.body, {\n    target: document.querySelector(\".pinchable\"),\n    pinchable: [\"rotatable\", \"scalable\"],\n}).on(\"rotate\", ({ target, beforeDelta }) => {\n    rotate += beforeDelta;\n    target.style.transform = \"scale(\" + scale.join(\", \") + \") rotate(\" + rotate + \"deg)\";\n}).on(\"scale\", ({ target, delta }) => {\n    scale[0] *= delta[0];\n    scale[1] *= delta[1];\n    target.style.transform = \"scale(\" + scale.join(\", \") + \") rotate(\" + rotate + \"deg)\";\n});`,\n        react: `\nimport Moveable from \"react-moveable\";\nthis.scale = [1, 1];\nthis.rotate = 0;\n\nreturn (\n    <Moveable\n        target={document.querySelector(\".pinchable\")}\n        pinchable={[\"rotatable\", \"scalable\"]},\n        onRotate={({ target, beforeDelta }) => {\n            this.rotate += beforeDelta;\n            target.style.transform\n                = \"scale(\" + this.scale.join(\", \") + \") \"\n                + \"rotate(\" + this.rotate + \"deg)\";\n        }}\n        onScale={({ target, beforeDelta }) => {\n            this.scale[0] *= delta[0];\n            this.scale[1] *= delta[1];\n            target.style.transform\n                = \"scale(\" + this.scale.join(\", \") + \") \"\n                + \"rotate(\" + this.rotate + \"deg)\";\n        }}\n    />\n);`,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n    <div #target class=\"target\">target</div>\n    <ngx-moveable\n        [target]=\"target\"\n        [pinchable]=\"['rotatable', 'scalable']\"\n        [rotate]=\"onRotate($event)\"\n        [scale]=\"onScale($event)\"\n/>\n${\"`\"},\n})\nexport class AppComponent {\n    scale = [1, 1];\n    rotate = 0;\n    onRotate({ target, beforeDelta }) {\n        this.rotate += beforeDelta;\n        target.style.transform\n            = \"scale(\" + this.scale.join(\", \") + \") \"\n            + \"rotate(\" + this.rotate + \"deg)\";\n    }\n    onScale({ target, beforeDelta }) {\n        this.scale[0] *= delta[0];\n        this.scale[1] *= delta[1];\n        target.style.transform\n            = \"scale(\" + this.scale.join(\", \") + \") \"\n            + \"rotate(\" + this.rotate + \"deg)\";\n    }\n}\n`,\n    },\n    origin: {\n        vanilla: `\nimport Moveable from \"moveable\";\n\nconst rotatable = new Moveable(document.body, {\n    target: document.querySelector(\".origin\"),\n    origin: true,\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nreturn (\n    <Moveable\n        target={document.querySelector(\".origin\")}\n        origin={true}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target class=\"target\">target</div>\n<ngx-moveable\n    [target]=\"target\"\n    [origin]=\"true\"\n    />\n${\"`\"},\n})\nexport class AppComponent {\n}\n`,\n    },\n    groupable: {\n        vanilla: `\nimport Moveable from \"moveable\";\nconst poses = [\n    [0, 0],\n    [0, 0],\n    [0, 0],\n];\nconst target = [].slice.call(\n    document.querySelectorAll(\".target\"),\n);\nconst groupable = new Moveable(document.body, {\n    target,\n    draggable: true,\n}).on(\"dragGroup\", ({ events }) => {\n    events.forEach(({ target, beforeDelta }, i) => {\n        poses[i][0] += beforeDelta[0];\n        poses[i][1] += beforeDelta[1];\n\n        target.style.transform\n            = \"translate(\"\n            + poses[i][0] + \"px, \"\n            + poses[i][1] + \"px)\";\n    });\n});\n        `,\n        react: `\nimport Moveable from \"react-moveable\";\n\nthis.poses = [\n    [0, 0],\n    [0, 0],\n    [0, 0],\n];\n\nconst target = [].slice.call(\n    document.querySelectorAll(\".target\"),\n);\nreturn (\n    <Moveable\n        target={target}\n        draggable={true}\n        onDragGroup={({ events }) => {\n            events.forEach(({ target, beforeDelta }, i) => {\n                this.poses[i][0] += beforeDelta[0];\n                this.poses[i][1] += beforeDelta[1];\n\n                target.style.transform\n                    = \"translate(\"\n                    + this.poses[i][0] + \"px, \"\n                    + this.poses[i][1] + \"px)\";\n            });\n        }}\n    />\n);\n        `,\n        angular: `\nimport {\n    NgxMoveableModule,\n    NgxMoveableComponent,\n} from \"ngx-moveable\";\n\n@Component({\n    selector: 'AppComponent',\n    template: ${\"`\"}\n<div #target1 class=\"target\">target1</div>\n<div #target2 class=\"target\">target2</div>\n<div #target3 class=\"target\">target3</div>\n<ngx-moveable\n    [target]=\"[target1, target2, target3]\"\n    [draggable]=\"true\"\n    (dragGroup)=\"onDragGroup($event)\n    />\n${\"`\"},\n})\nexport class AppComponent {\n    poses = [\n        [0, 0],\n        [0, 0],\n        [0, 0],\n    ];\n    onDragGroup({ events }) {\n        events.forEach(({ target, beforeDelta }, i) => {\n            this.poses[i][0] += beforeDelta[0];\n            this.poses[i][1] += beforeDelta[1];\n\n            target.style.transform\n                = \"translate(\"\n                + this.poses[i][0] + \"px, \"\n                + this.poses[i][1] + \"px)\";\n        });\n    }\n}\n        `,\n    },\n};\n","import Moveable from \"../../src/Moveable\";\nimport { codes } from \"./consts\";\nimport { Frame } from \"scenejs\";\nimport \"./index.css\";\n\ndeclare const hljs: any;\n\nconst moveableElement: HTMLElement = document.querySelector(\".moveable\");\nconst labelElement: HTMLElement = document.querySelector(\".label\");\n\nconst frame = new Frame({\n    width: \"250px\",\n    height: \"200px\",\n    left: \"0px\",\n    top: \"0px\",\n    transform: {\n        rotate: \"0deg\",\n        scaleX: 1,\n        scaleY: 1,\n        matrix3d: [\n            1, 0, 0, 0,\n            0, 1, 0, 0,\n            0, 0, 1, 0,\n            0, 0, 0, 1,\n        ],\n    },\n});\n\nfunction setTransform(target: HTMLElement | SVGElement) {\n    target.style.cssText = frame.toCSS();\n}\nfunction setLabel(clientX: number, clientY: number, text: string) {\n    // tslint:disable-next-line: max-line-length\n\n    labelElement.style.cssText = `\n    display: block; transform: translate(${clientX}px, ${clientY - 10}px) translate(-100%, -100%);`;\n\n    labelElement.innerHTML = text;\n}\n\nconst moveable = new Moveable(moveableElement.parentElement, {\n    target: moveableElement,\n    origin: false,\n    draggable: true,\n    rotatable: true,\n    scalable: true,\n    pinchable: true,\n    keepRatio: false,\n    throttleDrag: 1,\n    throttleScale: 0.01,\n    throttleRotate: 0.2,\n    throttleResize: 1,\n}).on(\"pinch\", ({ clientX, clientY }) => {\n    setTimeout(() => {\n        setLabel(clientX, clientY, `X: ${frame.get(\"left\")}\n        <br/>Y: ${frame.get(\"top\")}\n        <br/>W: ${frame.get(\"width\")}\n        <br/>H: ${frame.get(\"height\")}\n        <br/>S: ${frame.get(\"transform\", \"scaleX\").toFixed(2)}, ${frame.get(\"transform\", \"scaleY\").toFixed(2)}\n        <br/>R: ${parseFloat(frame.get(\"transform\", \"rotate\")).toFixed(1)}deg\n        `);\n    });\n}).on(\"drag\", ({ target, left, top, clientX, clientY, isPinch }) => {\n    frame.set(\"left\", `${left}px`);\n    frame.set(\"top\", `${top}px`);\n    setTransform(target);\n    !isPinch && setLabel(clientX, clientY, `X: ${left}px<br/>Y: ${top}px`);\n\n}).on(\"scale\", ({ target, delta, clientX, clientY, isPinch }) => {\n    const scaleX = frame.get(\"transform\", \"scaleX\") * delta[0];\n    const scaleY = frame.get(\"transform\", \"scaleY\") * delta[1];\n    frame.set(\"transform\", \"scaleX\", scaleX);\n    frame.set(\"transform\", \"scaleY\", scaleY);\n    setTransform(target);\n    !isPinch && setLabel(clientX, clientY, `S: ${scaleX.toFixed(2)}, ${scaleY.toFixed(2)}`);\n\n}).on(\"rotate\", ({ target, beforeDelta, clientX, clientY, isPinch }) => {\n    const deg = parseFloat(frame.get(\"transform\", \"rotate\")) + beforeDelta;\n\n    frame.set(\"transform\", \"rotate\", `${deg}deg`);\n    setTransform(target);\n    !isPinch && setLabel(clientX, clientY, `R: ${deg.toFixed(1)}`);\n}).on(\"resize\", ({ target, width, height, clientX, clientY, isPinch }) => {\n    frame.set(\"width\", `${width}px`);\n    frame.set(\"height\", `${height}px`);\n    setTransform(target);\n    !isPinch &&  setLabel(clientX, clientY, `W: ${width}px<br/>H: ${height}px`);\n}).on(\"warp\", ({ target, multiply, delta, clientX, clientY }) => {\n    frame.set(\"transform\", \"matrix3d\", multiply(frame.get(\"transform\", \"matrix3d\"), delta));\n    setTransform(target);\n    setLabel(clientX, clientY, `X: ${clientX}px<br/>Y: ${clientY}px`);\n}).on(\"dragEnd\", () => {\n    labelElement.style.display = \"none\";\n}).on(\"scaleEnd\", () => {\n    labelElement.style.display = \"none\";\n}).on(\"rotateEnd\", () => {\n    labelElement.style.display = \"none\";\n}).on(\"resizeEnd\", () => {\n    labelElement.style.display = \"none\";\n}).on(\"warpEnd\", () => {\n    labelElement.style.display = \"none\";\n});\n\nconst draggableElement: HTMLElement = document.querySelector(\".draggable\");\nconst draggable = new Moveable(draggableElement.parentElement, {\n    target: draggableElement,\n    origin: false,\n    draggable: true,\n}).on(\"drag\", ({ target, transform }) => {\n    target.style.transform = transform;\n});\n\nconst resizableElement: HTMLElement = document.querySelector(\".resizable\");\nconst resizable = new Moveable(resizableElement.parentElement, {\n    target: resizableElement,\n    origin: false,\n    resizable: true,\n}).on(\"resize\", ({ target, width, height }) => {\n    target.style.width = `${width}px`;\n    target.style.height = `${height}px`;\n});\n\nconst scalableElement: HTMLElement = document.querySelector(\".scalable\");\nconst scalable = new Moveable(scalableElement.parentElement, {\n    target: scalableElement,\n    origin: false,\n    scalable: true,\n}).on(\"scale\", ({ target, transform }) => {\n    target.style.transform = transform;\n});\n\nconst rotatableElement: HTMLElement = document.querySelector(\".rotatable\");\nconst rotatable = new Moveable(rotatableElement.parentElement, {\n    target: rotatableElement,\n    origin: false,\n    rotatable: true,\n}).on(\"rotate\", ({ target, transform }) => {\n    target.style.transform = transform;\n});\nconst warpableElement: HTMLElement = document.querySelector(\".warpable\");\nconst warpable = new Moveable(warpableElement.parentElement, {\n    target: warpableElement,\n    warpable: true,\n    origin: false,\n}).on(\"warp\", ({ target, transform }) => {\n    target.style.transform = transform;\n});\n\nconst originElement: HTMLElement = document.querySelector(\".origin\");\nconst origin = new Moveable(originElement.parentElement, {\n    target: originElement,\n    origin: true,\n    draggable: true,\n    rotatable: true,\n}).on(\"drag\", ({ target, left, top }) => {\n    target.style.left = `${left}px`;\n    target.style.top = `${top}px`;\n}).on(\"rotate\", ({ target, transform }) => {\n    target.style.transform = transform;\n});\n\nconst pinchableElement: HTMLElement = document.querySelector(\".pinchable\");\nconst scale = [1, 1];\nlet rotate = 0;\nconst pinchable = new Moveable(pinchableElement.parentElement, {\n    target: pinchableElement,\n    pinchable: [\"rotatable\", \"scalable\"],\n    origin: false,\n}).on(\"rotate\", ({ beforeDelta }) => {\n    rotate += beforeDelta;\n\n    pinchableElement.style.transform = `scale(${scale.join(\", \")}) rotate(${rotate}deg)`;\n}).on(\"scale\", ({ delta }) => {\n    scale[0] *= delta[0];\n    scale[1] *= delta[1];\n\n    pinchableElement.style.transform = `scale(${scale.join(\", \")}) rotate(${rotate}deg)`;\n});\n\nconst groupableElement: HTMLElement = document.querySelector(\".groupable\");\nconst poses = [\n    [0, 0],\n    [0, 0],\n    [0, 0],\n];\n\nconst groupable = new Moveable(groupableElement.parentElement, {\n    target: [].slice.call(groupableElement.querySelectorAll(\"span\")),\n    origin: false,\n    draggable: true,\n}).on(\"dragGroup\", ({ events }) => {\n    events.forEach(({ target, beforeDelta }, i) => {\n        poses[i][0] += beforeDelta[0];\n        poses[i][1] += beforeDelta[1];\n\n        target.style.transform = `translate(${poses[i][0]}px, ${poses[i][1]}px)`;\n    });\n});\n\nwindow.addEventListener(\"resize\", () => {\n    moveable.updateRect();\n    draggable.updateRect();\n    resizable.updateRect();\n    scalable.updateRect();\n    rotatable.updateRect();\n    warpable.updateRect();\n    pinchable.updateRect();\n    groupable.updateRect();\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    document.querySelectorAll(\"pre\").forEach((pre: HTMLElement) => {\n        const group = pre.getAttribute(\"data-group\");\n        const panel = pre.getAttribute(\"data-panel\");\n        const block = pre.querySelector(\"code\");\n\n        let code = codes[group][panel === \"preact\" ? \"react\" : panel].trim();\n\n        if (panel === \"preact\") {\n            code = code.replace(/react/g, \"preact\");\n        }\n        block.innerText = code;\n        hljs.highlightBlock(block);\n    });\n});\n\nconst ableElement = document.querySelector(\".buttons.able\");\nconst ableButtonElements = [].slice.call(ableElement.children);\n\nableElement.addEventListener(\"click\", e => {\n    const target = (e.target as HTMLElement);\n    const able = target.getAttribute(\"data-able\");\n\n    if (!able) {\n        return;\n    }\n    ableButtonElements.forEach((el: HTMLElement) => {\n        el.classList.remove(\"selected\");\n    });\n    target.classList.add(\"selected\");\n\n    if (able === \"warpable\") {\n        moveable.resizable = false;\n        moveable.scalable = false;\n        moveable.warpable = true;\n    } else if (able === \"scalable\") {\n        moveable.resizable = false;\n        moveable.scalable = true;\n        moveable.warpable = false;\n    } else if (able === \"resizable\") {\n        moveable.resizable = true;\n        moveable.scalable = false;\n        moveable.warpable = false;\n    }\n});\n\nconst tabGroups = {};\n\n[].slice.call(document.querySelectorAll(\"[data-tab]\")).forEach(tabElement => {\n    const group = tabElement.getAttribute(\"data-group\");\n    const tab = tabElement.getAttribute(\"data-tab\");\n    const panelElement = document.querySelector(`[data-group=\"${group}\"][data-panel=\"${tab}\"]`);\n\n    !tabGroups[group] && (tabGroups[group] = []);\n    tabGroups[group].push([tabElement, panelElement]);\n\n    tabElement.addEventListener(\"click\", () => {\n        tabGroups[group].forEach(([otherTabElement, otherPanelElement]) => {\n            if (tabElement === otherTabElement) {\n                return;\n            }\n            otherTabElement.classList.remove(\"selected\");\n            otherPanelElement.classList.remove(\"selected\");\n        });\n        tabElement.classList.add(\"selected\");\n        panelElement.classList.add(\"selected\");\n    });\n});\n"],"names":["tslib_1","props","_super","_this","state","h","Moveable","ref","Component","PROPERTIES","EVENTS","parentElement","options","element","document","createElement","nextOptions","container","events","forEach","name","camelize","e","trigger","render","InnerMoveable","appendChild","children","target","isArray","length","updateRect","getMoveable","isMoveableElement","dragStart","clientX","clientY","isInside","updateTarget","el","base","remove","removeChild","off","destroy","innerMoveable","preactMoveable","Properties","prototype","property","Object","defineProperty","get","set","value","setState","_a","enumerable","configurable","EgComponent","codes","draggable","vanilla","react","angular","resizable","scalable","rotatable","warpable","pinchable","origin","groupable","moveableElement","querySelector","labelElement","frame","Frame","width","height","left","top","transform","rotate","scaleX","scaleY","matrix3d","setTransform","style","cssText","toCSS","setLabel","text","innerHTML","moveable","keepRatio","throttleDrag","throttleScale","throttleRotate","throttleResize","on","setTimeout","toFixed","parseFloat","isPinch","delta","beforeDelta","deg","multiply","display","draggableElement","resizableElement","scalableElement","rotatableElement","warpableElement","originElement","pinchableElement","scale","join","groupableElement","poses","slice","call","querySelectorAll","i","window","addEventListener","pre","group","getAttribute","panel","block","code","trim","replace","innerText","hljs","highlightBlock","ableElement","ableButtonElements","able","classList","add","tabGroups","tabElement","tab","panelElement","push","otherTabElement","otherPanelElement"],"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"}